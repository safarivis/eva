<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="robots" content="index, follow, all" />
    <title>Index | API</title>

            <link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
        <link rel="stylesheet" type="text/css" href="css/bootstrap-theme.min.css">
        <link rel="stylesheet" type="text/css" href="css/doctum.css">
        <link rel="stylesheet" type="text/css" href="fonts/doctum-font.css">
        <script src="js/jquery-3.5.1.slim.min.js"></script>
        <script async defer src="doctum.js"></script>
        <script async defer src="js/bootstrap.min.js"></script>
        <script async defer src="js/autocomplete.min.js"></script>
        <meta name="MobileOptimized" content="width">
        <meta name="HandheldFriendly" content="true">
        <meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1">

    </head>

    <body id="doc-index" data-name="" data-root-path="" data-search-index-url="doctum-search.json">
            <div id="content">
        <div id="left-column">
                <div id="control-panel">
                <div class="search-bar hidden" id="search-progress-bar-container">
            <div class="progress">
                <div class="progress-bar" role="progressbar" id="search-progress-bar"
                    aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%"></div>
            </div>
        </div>
        <form id="search-form" action="https://docs.dagger.io/reference/php/search.html">
            <span class="icon icon-search"></span>
            <input name="search"
                   id="doctum-search-auto-complete"
                   class="typeahead form-control"
                   type="search"
                   placeholder="Search"
                   spellcheck="false"
                   autocorrect="off"
                   autocomplete="off"
                   autocapitalize="off">
            <div class="auto-complete-results" id="auto-complete-results"></div>
        </form>
    </div>

                <div id="api-tree"></div>

        </div>
        <div id="right-column">
                <nav id="site-nav" class="navbar navbar-default" role="navigation">
        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-elements">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class='navbar-brand' href='https://docs.dagger.io/reference/php/'>API</a>
            </div>
            <div class="collapse navbar-collapse" id="navbar-elements">
                <ul class="nav navbar-nav">
                    <li><a href='classes'>Classes</a></li>
                    <li><a href='namespaces'>Namespaces</a></li>
                    <li><a href='interfaces'>Interfaces</a></li>
                    <li><a href='traits'>Traits</a></li>
                    <li><a href='doc-index'>Index</a></li>
                    <li><a href='search'>Search</a></li>
                </ul>
            </div>
        </div>
    </nav>

                        <div id="page-content">
    <div class="page-header">
        <h1>Index</h1>
    </div>

    <ul class="pagination">
                                    <li><a href="doc-index#letterA">A</a></li>
                                                <li><a href="doc-index#letterB">B</a></li>
                                                <li><a href="doc-index#letterC">C</a></li>
                                                <li><a href="doc-index#letterD">D</a></li>
                                                <li><a href="doc-index#letterE">E</a></li>
                                                <li><a href="doc-index#letterF">F</a></li>
                                                <li><a href="doc-index#letterG">G</a></li>
                                                <li><a href="doc-index#letterH">H</a></li>
                                                <li><a href="doc-index#letterI">I</a></li>
                                                <li class="disabled"><a href="doc-index#letterJ">J</a></li>
                                                <li><a href="doc-index#letterK">K</a></li>
                                                <li><a href="doc-index#letterL">L</a></li>
                                                <li><a href="doc-index#letterM">M</a></li>
                                                <li><a href="doc-index#letterN">N</a></li>
                                                <li><a href="doc-index#letterO">O</a></li>
                                                <li><a href="doc-index#letterP">P</a></li>
                                                <li><a href="doc-index#letterQ">Q</a></li>
                                                <li><a href="doc-index#letterR">R</a></li>
                                                <li><a href="doc-index#letterS">S</a></li>
                                                <li><a href="doc-index#letterT">T</a></li>
                                                <li><a href="doc-index#letterU">U</a></li>
                                                <li><a href="doc-index#letterV">V</a></li>
                                                <li><a href="doc-index#letterW">W</a></li>
                                                <li class="disabled"><a href="doc-index#letterX">X</a></li>
                                                <li class="disabled"><a href="doc-index#letterY">Y</a></li>
                                                <li class="disabled"><a href="doc-index#letterZ">Z</a></li>
                        </ul>

    <h2 id="letterA">A</h2>
        <dl id="indexA"><dt><a href='dagger/attribute/argument'><abbr title="Dagger\Attribute\Argument">Argument</abbr></a> &mdash; <em>Class in namespace <a href='dagger/attribute'>Dagger\Attribute</a></em></dt>
                    <dd></dd><dt><a href='dagger/client/abstractclient'><abbr title="Dagger\Client\AbstractClient">AbstractClient</abbr></a> &mdash; <em>Class in namespace <a href='dagger/client'>Dagger\Client</a></em></dt>
                    <dd></dd><dt><a href='dagger/client/abstractid'><abbr title="Dagger\Client\AbstractId">AbstractId</abbr></a> &mdash; <em>Class in namespace <a href='dagger/client'>Dagger\Client</a></em></dt>
                    <dd></dd><dt><a href='dagger/client/abstractinputobject'><abbr title="Dagger\Client\AbstractInputObject">AbstractInputObject</abbr></a> &mdash; <em>Class in namespace <a href='dagger/client'>Dagger\Client</a></em></dt>
                    <dd></dd><dt><a href='dagger/client/abstractobject'><abbr title="Dagger\Client\AbstractObject">AbstractObject</abbr></a> &mdash; <em>Class in namespace <a href='dagger/client'>Dagger\Client</a></em></dt>
                    <dd></dd><dt><a href='dagger/client/abstractscalar'><abbr title="Dagger\Client\AbstractScalar">AbstractScalar</abbr></a> &mdash; <em>Class in namespace <a href='dagger/client'>Dagger\Client</a></em></dt>
                    <dd></dd><dt><a href='dagger/container#method_asService'>
<abbr title="Dagger\Container">Container</abbr>::asService</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Turn the container into a Service.</p></dd><dt><a href='dagger/container#method_asTarball'>
<abbr title="Dagger\Container">Container</abbr>::asTarball</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Returns a File representing the container serialized to a tarball.</p></dd><dt><a href='dagger/directory#method_asModule'>
<abbr title="Dagger\Directory">Directory</abbr>::asModule</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Load the directory as a Dagger module source</p></dd><dt><a href='dagger/directory#method_asModuleSource'>
<abbr title="Dagger\Directory">Directory</abbr>::asModuleSource</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Load the directory as a Dagger module source</p></dd><dt><a href='dagger/enginecacheentry#method_activelyUsed'>
<abbr title="Dagger\EngineCacheEntry">EngineCacheEntry</abbr>::activelyUsed</a>() &mdash; <em>Method in class <a href='dagger/enginecacheentry'><abbr title="Dagger\EngineCacheEntry">EngineCacheEntry</abbr></a></em></dt>
                    <dd><p>Whether the cache entry is actively being used.</p></dd><dt><a href='dagger/function_#method_args'>
<abbr title="Dagger\Function_">Function_</abbr>::args</a>() &mdash; <em>Method in class <a href='dagger/function_'><abbr title="Dagger\Function_">Function_</abbr></a></em></dt>
                    <dd><p>Arguments accepted by the function, if any.</p></dd><dt><a href='dagger/modulesource#method_asModule'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::asModule</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>Load the source as a module. If this is a local source, the parent directory must have been provided during module source creation</p></dd><dt><a href='dagger/modulesource#method_asString'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::asString</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>A human readable ref string representation of this module source.</p></dd><dt><a href='dagger/typedef#method_asEnum'>
<abbr title="Dagger\TypeDef">TypeDef</abbr>::asEnum</a>() &mdash; <em>Method in class <a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a></em></dt>
                    <dd><p>If kind is ENUM, the enum-specific type definition. If kind is not ENUM, this will be null.</p></dd><dt><a href='dagger/typedef#method_asInput'>
<abbr title="Dagger\TypeDef">TypeDef</abbr>::asInput</a>() &mdash; <em>Method in class <a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a></em></dt>
                    <dd><p>If kind is INPUT, the input-specific type definition. If kind is not INPUT, this will be null.</p></dd><dt><a href='dagger/typedef#method_asInterface'>
<abbr title="Dagger\TypeDef">TypeDef</abbr>::asInterface</a>() &mdash; <em>Method in class <a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a></em></dt>
                    <dd><p>If kind is INTERFACE, the interface-specific type definition. If kind is not INTERFACE, this will be null.</p></dd><dt><a href='dagger/typedef#method_asList'>
<abbr title="Dagger\TypeDef">TypeDef</abbr>::asList</a>() &mdash; <em>Method in class <a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a></em></dt>
                    <dd><p>If kind is LIST, the list-specific type definition. If kind is not LIST, this will be null.</p></dd><dt><a href='dagger/typedef#method_asObject'>
<abbr title="Dagger\TypeDef">TypeDef</abbr>::asObject</a>() &mdash; <em>Method in class <a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a></em></dt>
                    <dd><p>If kind is OBJECT, the object-specific type definition. If kind is not OBJECT, this will be null.</p></dd><dt><a href='dagger/typedef#method_asScalar'>
<abbr title="Dagger\TypeDef">TypeDef</abbr>::asScalar</a>() &mdash; <em>Method in class <a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a></em></dt>
                    <dd><p>If kind is SCALAR, the scalar-specific type definition. If kind is not SCALAR, this will be null.</p></dd>        </dl><h2 id="letterB">B</h2>
        <dl id="indexB"><dt><a href='dagger/buildarg'><abbr title="Dagger\BuildArg">BuildArg</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>Key value object that represents a build argument.</p></dd><dt><a href='dagger/client#method_builtinContainer'>
<abbr title="Dagger\Client">Client</abbr>::builtinContainer</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Retrieves a container builtin to the engine.</p></dd><dt><a href='dagger/container#method_build'>
<abbr title="Dagger\Container">Container</abbr>::build</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Initializes this container from a Dockerfile build.</p></dd><dt><a href='dagger/gitrepository#method_branch'>
<abbr title="Dagger\GitRepository">GitRepository</abbr>::branch</a>() &mdash; <em>Method in class <a href='dagger/gitrepository'><abbr title="Dagger\GitRepository">GitRepository</abbr></a></em></dt>
                    <dd><p>Returns details of a branch.</p></dd>        </dl><h2 id="letterC">C</h2>
        <dl id="indexC"><dt><a href='dagger/cachevolume'><abbr title="Dagger\CacheVolume">CacheVolume</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A directory whose contents persist across runs.</p></dd><dt><a href='dagger/cachevolumeid'><abbr title="Dagger\CacheVolumeId">CacheVolumeId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>CacheVolumeID</code> scalar type represents an identifier for an object of type CacheVolume.</p></dd><dt><a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The root of the DAG.</p></dd><dt><a href='dagger/client#method_cacheVolume'>
<abbr title="Dagger\Client">Client</abbr>::cacheVolume</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Constructs a cache volume for a given cache key.</p></dd><dt><a href='dagger/client#method_container'>
<abbr title="Dagger\Client">Client</abbr>::container</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Creates a scratch container.</p></dd><dt><a href='dagger/client#method_currentFunctionCall'>
<abbr title="Dagger\Client">Client</abbr>::currentFunctionCall</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>The FunctionCall context that the SDK caller is currently executing in.</p></dd><dt><a href='dagger/client#method_currentModule'>
<abbr title="Dagger\Client">Client</abbr>::currentModule</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>The module currently being served in the session, if any.</p></dd><dt><a href='dagger/client#method_currentTypeDefs'>
<abbr title="Dagger\Client">Client</abbr>::currentTypeDefs</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>The TypeDef representations of the objects currently being served in the session.</p></dd><dt>$<a href='dagger/client/abstractclient#property_client'>
<abbr title="Dagger\Client\AbstractClient">AbstractClient</abbr>#client</a> &mdash; <em>Property in class <a href='dagger/client/abstractclient'><abbr title="Dagger\Client\AbstractClient">AbstractClient</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/connection'><abbr title="Dagger\Connection">Connection</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd></dd><dt>$<a href='dagger/connection#property_client'>
<abbr title="Dagger\Connection">Connection</abbr>#client</a> &mdash; <em>Property in class <a href='dagger/connection'><abbr title="Dagger\Connection">Connection</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/connection#method_createGraphQlClient'>
<abbr title="Dagger\Connection">Connection</abbr>::createGraphQlClient</a>() &mdash; <em>Method in class <a href='dagger/connection'><abbr title="Dagger\Connection">Connection</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/connection#method_connect'>
<abbr title="Dagger\Connection">Connection</abbr>::connect</a>() &mdash; <em>Method in class <a href='dagger/connection'><abbr title="Dagger\Connection">Connection</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/connection#method_close'>
<abbr title="Dagger\Connection">Connection</abbr>::close</a>() &mdash; <em>Method in class <a href='dagger/connection'><abbr title="Dagger\Connection">Connection</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>An OCI-compatible container, also known as a Docker container.</p></dd><dt><a href='dagger/containerid'><abbr title="Dagger\ContainerId">ContainerId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>ContainerID</code> scalar type represents an identifier for an object of type Container.</p></dd><dt><a href='dagger/currentmodule'><abbr title="Dagger\CurrentModule">CurrentModule</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>Reflective module API provided to functions at runtime.</p></dd><dt><a href='dagger/currentmoduleid'><abbr title="Dagger\CurrentModuleId">CurrentModuleId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>CurrentModuleID</code> scalar type represents an identifier for an object of type CurrentModule.</p></dd><dt><a href='dagger/dagger#method_connect'>
<abbr title="Dagger\Dagger">Dagger</abbr>::connect</a>() &mdash; <em>Method in class <a href='dagger/dagger'><abbr title="Dagger\Dagger">Dagger</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/enginecacheentry#method_createdTimeUnixNano'>
<abbr title="Dagger\EngineCacheEntry">EngineCacheEntry</abbr>::createdTimeUnixNano</a>() &mdash; <em>Method in class <a href='dagger/enginecacheentry'><abbr title="Dagger\EngineCacheEntry">EngineCacheEntry</abbr></a></em></dt>
                    <dd><p>The time the cache entry was created, in Unix nanoseconds.</p></dd><dt><a href='dagger/file#method_contents'>
<abbr title="Dagger\File">File</abbr>::contents</a>() &mdash; <em>Method in class <a href='dagger/file'><abbr title="Dagger\File">File</abbr></a></em></dt>
                    <dd><p>Retrieves the contents of the file.</p></dd><dt><a href='dagger/generatedcode#method_code'>
<abbr title="Dagger\GeneratedCode">GeneratedCode</abbr>::code</a>() &mdash; <em>Method in class <a href='dagger/generatedcode'><abbr title="Dagger\GeneratedCode">GeneratedCode</abbr></a></em></dt>
                    <dd><p>The directory containing the generated code.</p></dd><dt><a href='dagger/gitref#method_commit'>
<abbr title="Dagger\GitRef">GitRef</abbr>::commit</a>() &mdash; <em>Method in class <a href='dagger/gitref'><abbr title="Dagger\GitRef">GitRef</abbr></a></em></dt>
                    <dd><p>The resolved commit id at this ref.</p></dd><dt><a href='dagger/gitrepository#method_commit'>
<abbr title="Dagger\GitRepository">GitRepository</abbr>::commit</a>() &mdash; <em>Method in class <a href='dagger/gitrepository'><abbr title="Dagger\GitRepository">GitRepository</abbr></a></em></dt>
                    <dd><p>Returns details of a commit.</p></dd><dt><a href='dagger/modulesource#method_cloneRef'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::cloneRef</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>The ref to clone the root of the git repo from. Only valid for git sources.</p></dd><dt><a href='dagger/modulesource#method_commit'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::commit</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>The resolved commit of the git repo this source points to. Only valid for git sources.</p></dd><dt><a href='dagger/modulesource#method_configExists'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::configExists</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>Whether an existing dagger.json for the module was found.</p></dd><dt><a href='dagger/modulesource#method_contextDirectory'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::contextDirectory</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>The full directory loaded for the module source, including the source code as a subdirectory.</p></dd><dt><a href='dagger/objecttypedef#method_constructor'>
<abbr title="Dagger\ObjectTypeDef">ObjectTypeDef</abbr>::constructor</a>() &mdash; <em>Method in class <a href='dagger/objecttypedef'><abbr title="Dagger\ObjectTypeDef">ObjectTypeDef</abbr></a></em></dt>
                    <dd><p>The function used to construct new instances of this object, if any</p></dd><dt><a href='dagger/sourcemap#method_column'>
<abbr title="Dagger\SourceMap">SourceMap</abbr>::column</a>() &mdash; <em>Method in class <a href='dagger/sourcemap'><abbr title="Dagger\SourceMap">SourceMap</abbr></a></em></dt>
                    <dd><p>The column number within the line.</p></dd>        </dl><h2 id="letterD">D</h2>
        <dl id="indexD"><dt><a href='dagger/attribute/daggerfunction'><abbr title="Dagger\Attribute\DaggerFunction">DaggerFunction</abbr></a> &mdash; <em>Class in namespace <a href='dagger/attribute'>Dagger\Attribute</a></em></dt>
                    <dd></dd><dt><a href='dagger/attribute/daggerobject'><abbr title="Dagger\Attribute\DaggerObject">DaggerObject</abbr></a> &mdash; <em>Class in namespace <a href='dagger/attribute'>Dagger\Attribute</a></em></dt>
                    <dd></dd><dt><a href='dagger/attribute/defaultpath'><abbr title="Dagger\Attribute\DefaultPath">DefaultPath</abbr></a> &mdash; <em>Class in namespace <a href='dagger/attribute'>Dagger\Attribute</a></em></dt>
                    <dd></dd><dt><a href='dagger/attribute/doc'><abbr title="Dagger\Attribute\Doc">Doc</abbr></a> &mdash; <em>Class in namespace <a href='dagger/attribute'>Dagger\Attribute</a></em></dt>
                    <dd></dd><dt><a href='dagger/client#method_defaultPlatform'>
<abbr title="Dagger\Client">Client</abbr>::defaultPlatform</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>The default platform of the engine.</p></dd><dt><a href='dagger/client#method_directory'>
<abbr title="Dagger\Client">Client</abbr>::directory</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Creates an empty directory.</p></dd><dt><a href='dagger/container#method_defaultArgs'>
<abbr title="Dagger\Container">Container</abbr>::defaultArgs</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves default arguments for future commands.</p></dd><dt><a href='dagger/container#method_directory'>
<abbr title="Dagger\Container">Container</abbr>::directory</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves a directory at the given path.</p></dd><dt><a href='dagger/dagger'><abbr title="Dagger\Dagger">Dagger</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd></dd><dt><a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A directory.</p></dd><dt><a href='dagger/directory#method_diff'>
<abbr title="Dagger\Directory">Directory</abbr>::diff</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Gets the difference between this directory and an another directory.</p></dd><dt><a href='dagger/directory#method_digest'>
<abbr title="Dagger\Directory">Directory</abbr>::digest</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Return the directory's digest. The format of the digest is not guaranteed to be stable between releases of Dagger. It is guaranteed to be stable between invocations of the same Dagger engine.</p></dd><dt><a href='dagger/directory#method_directory'>
<abbr title="Dagger\Directory">Directory</abbr>::directory</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Retrieves a directory at the given path.</p></dd><dt><a href='dagger/directory#method_dockerBuild'>
<abbr title="Dagger\Directory">Directory</abbr>::dockerBuild</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Builds a new Docker container from this directory.</p></dd><dt><a href='dagger/directoryid'><abbr title="Dagger\DirectoryId">DirectoryId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>DirectoryID</code> scalar type represents an identifier for an object of type Directory.</p></dd><dt><a href='dagger/enginecacheentry#method_description'>
<abbr title="Dagger\EngineCacheEntry">EngineCacheEntry</abbr>::description</a>() &mdash; <em>Method in class <a href='dagger/enginecacheentry'><abbr title="Dagger\EngineCacheEntry">EngineCacheEntry</abbr></a></em></dt>
                    <dd><p>The description of the cache entry.</p></dd><dt><a href='dagger/enginecacheentry#method_diskSpaceBytes'>
<abbr title="Dagger\EngineCacheEntry">EngineCacheEntry</abbr>::diskSpaceBytes</a>() &mdash; <em>Method in class <a href='dagger/enginecacheentry'><abbr title="Dagger\EngineCacheEntry">EngineCacheEntry</abbr></a></em></dt>
                    <dd><p>The disk space used by the cache entry.</p></dd><dt><a href='dagger/enginecacheentryset#method_diskSpaceBytes'>
<abbr title="Dagger\EngineCacheEntrySet">EngineCacheEntrySet</abbr>::diskSpaceBytes</a>() &mdash; <em>Method in class <a href='dagger/enginecacheentryset'><abbr title="Dagger\EngineCacheEntrySet">EngineCacheEntrySet</abbr></a></em></dt>
                    <dd><p>The total disk space used by the cache entries in this set.</p></dd><dt><a href='dagger/enumtypedef#method_description'>
<abbr title="Dagger\EnumTypeDef">EnumTypeDef</abbr>::description</a>() &mdash; <em>Method in class <a href='dagger/enumtypedef'><abbr title="Dagger\EnumTypeDef">EnumTypeDef</abbr></a></em></dt>
                    <dd><p>A doc string for the enum, if any.</p></dd><dt><a href='dagger/enumvaluetypedef#method_description'>
<abbr title="Dagger\EnumValueTypeDef">EnumValueTypeDef</abbr>::description</a>() &mdash; <em>Method in class <a href='dagger/enumvaluetypedef'><abbr title="Dagger\EnumValueTypeDef">EnumValueTypeDef</abbr></a></em></dt>
                    <dd><p>A doc string for the enum value, if any.</p></dd><dt><a href='dagger/fieldtypedef#method_description'>
<abbr title="Dagger\FieldTypeDef">FieldTypeDef</abbr>::description</a>() &mdash; <em>Method in class <a href='dagger/fieldtypedef'><abbr title="Dagger\FieldTypeDef">FieldTypeDef</abbr></a></em></dt>
                    <dd><p>A doc string for the field, if any.</p></dd><dt><a href='dagger/file#method_digest'>
<abbr title="Dagger\File">File</abbr>::digest</a>() &mdash; <em>Method in class <a href='dagger/file'><abbr title="Dagger\File">File</abbr></a></em></dt>
                    <dd><p>Return the file's digest. The format of the digest is not guaranteed to be stable between releases of Dagger. It is guaranteed to be stable between invocations of the same Dagger engine.</p></dd><dt><a href='dagger/functionarg#method_defaultPath'>
<abbr title="Dagger\FunctionArg">FunctionArg</abbr>::defaultPath</a>() &mdash; <em>Method in class <a href='dagger/functionarg'><abbr title="Dagger\FunctionArg">FunctionArg</abbr></a></em></dt>
                    <dd><p>Only applies to arguments of type File or Directory. If the argument is not set, load it from the given path in the context directory</p></dd><dt><a href='dagger/functionarg#method_defaultValue'>
<abbr title="Dagger\FunctionArg">FunctionArg</abbr>::defaultValue</a>() &mdash; <em>Method in class <a href='dagger/functionarg'><abbr title="Dagger\FunctionArg">FunctionArg</abbr></a></em></dt>
                    <dd><p>A default value to use for this argument when not explicitly set by the caller, if any.</p></dd><dt><a href='dagger/functionarg#method_description'>
<abbr title="Dagger\FunctionArg">FunctionArg</abbr>::description</a>() &mdash; <em>Method in class <a href='dagger/functionarg'><abbr title="Dagger\FunctionArg">FunctionArg</abbr></a></em></dt>
                    <dd><p>A doc string for the argument, if any.</p></dd><dt><a href='dagger/function_#method_description'>
<abbr title="Dagger\Function_">Function_</abbr>::description</a>() &mdash; <em>Method in class <a href='dagger/function_'><abbr title="Dagger\Function_">Function_</abbr></a></em></dt>
                    <dd><p>A doc string for the function, if any.</p></dd><dt><a href='dagger/host#method_directory'>
<abbr title="Dagger\Host">Host</abbr>::directory</a>() &mdash; <em>Method in class <a href='dagger/host'><abbr title="Dagger\Host">Host</abbr></a></em></dt>
                    <dd><p>Accesses a directory on the host.</p></dd><dt><a href='dagger/interfacetypedef#method_description'>
<abbr title="Dagger\InterfaceTypeDef">InterfaceTypeDef</abbr>::description</a>() &mdash; <em>Method in class <a href='dagger/interfacetypedef'><abbr title="Dagger\InterfaceTypeDef">InterfaceTypeDef</abbr></a></em></dt>
                    <dd><p>The doc string for the interface, if any.</p></dd><dt><a href='dagger/module#method_dependencies'>
<abbr title="Dagger\Module">Module</abbr>::dependencies</a>() &mdash; <em>Method in class <a href='dagger/module'><abbr title="Dagger\Module">Module</abbr></a></em></dt>
                    <dd><p>The dependencies of the module.</p></dd><dt><a href='dagger/module#method_description'>
<abbr title="Dagger\Module">Module</abbr>::description</a>() &mdash; <em>Method in class <a href='dagger/module'><abbr title="Dagger\Module">Module</abbr></a></em></dt>
                    <dd><p>The doc string of the module, if any</p></dd><dt><a href='dagger/modulesource#method_dependencies'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::dependencies</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>The dependencies of the module source.</p></dd><dt><a href='dagger/modulesource#method_digest'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::digest</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>A content-hash of the module source. Module sources with the same digest will output the same generated context and convert into the same module instance.</p></dd><dt><a href='dagger/modulesource#method_directory'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::directory</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>The directory containing the module configuration and source code (source code may be in a subdir).</p></dd><dt><a href='dagger/objecttypedef#method_description'>
<abbr title="Dagger\ObjectTypeDef">ObjectTypeDef</abbr>::description</a>() &mdash; <em>Method in class <a href='dagger/objecttypedef'><abbr title="Dagger\ObjectTypeDef">ObjectTypeDef</abbr></a></em></dt>
                    <dd><p>The doc string for the object, if any.</p></dd><dt><a href='dagger/port#method_description'>
<abbr title="Dagger\Port">Port</abbr>::description</a>() &mdash; <em>Method in class <a href='dagger/port'><abbr title="Dagger\Port">Port</abbr></a></em></dt>
                    <dd><p>The port description.</p></dd><dt><a href='dagger/scalartypedef#method_description'>
<abbr title="Dagger\ScalarTypeDef">ScalarTypeDef</abbr>::description</a>() &mdash; <em>Method in class <a href='dagger/scalartypedef'><abbr title="Dagger\ScalarTypeDef">ScalarTypeDef</abbr></a></em></dt>
                    <dd><p>A doc string for the scalar, if any.</p></dd>        </dl><h2 id="letterE">E</h2>
        <dl id="indexE"><dt><a href='dagger/client#method_engine'>
<abbr title="Dagger\Client">Client</abbr>::engine</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>The Dagger engine container configuration and state</p></dd><dt><a href='dagger/client#method_error'>
<abbr title="Dagger\Client">Client</abbr>::error</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Create a new error.</p></dd><dt><a href='dagger/container#method_entrypoint'>
<abbr title="Dagger\Container">Container</abbr>::entrypoint</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves entrypoint to be prepended to the arguments of all commands.</p></dd><dt><a href='dagger/container#method_envVariable'>
<abbr title="Dagger\Container">Container</abbr>::envVariable</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves the value of the specified environment variable.</p></dd><dt><a href='dagger/container#method_envVariables'>
<abbr title="Dagger\Container">Container</abbr>::envVariables</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves the list of environment variables passed to commands.</p></dd><dt><a href='dagger/container#method_exitCode'>
<abbr title="Dagger\Container">Container</abbr>::exitCode</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>The exit code of the last executed command.</p></dd><dt><a href='dagger/container#method_experimentalWithAllGPUs'>
<abbr title="Dagger\Container">Container</abbr>::experimentalWithAllGPUs</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>EXPERIMENTAL API! Subject to change/removal at any time.</p></dd><dt><a href='dagger/container#method_experimentalWithGPU'>
<abbr title="Dagger\Container">Container</abbr>::experimentalWithGPU</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>EXPERIMENTAL API! Subject to change/removal at any time.</p></dd><dt><a href='dagger/container#method_export'>
<abbr title="Dagger\Container">Container</abbr>::export</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Writes the container as an OCI tarball to the destination file path on the host.</p></dd><dt><a href='dagger/container#method_exposedPorts'>
<abbr title="Dagger\Container">Container</abbr>::exposedPorts</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves the list of exposed ports.</p></dd><dt><a href='dagger/directory#method_entries'>
<abbr title="Dagger\Directory">Directory</abbr>::entries</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Returns a list of files and directories at the given path.</p></dd><dt><a href='dagger/directory#method_export'>
<abbr title="Dagger\Directory">Directory</abbr>::export</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Writes the contents of the directory to a path on the host.</p></dd><dt><a href='dagger/engine'><abbr title="Dagger\Engine">Engine</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The Dagger engine configuration and state</p></dd><dt><a href='dagger/enginecache'><abbr title="Dagger\EngineCache">EngineCache</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A cache storage for the Dagger engine</p></dd><dt><a href='dagger/enginecache#method_entrySet'>
<abbr title="Dagger\EngineCache">EngineCache</abbr>::entrySet</a>() &mdash; <em>Method in class <a href='dagger/enginecache'><abbr title="Dagger\EngineCache">EngineCache</abbr></a></em></dt>
                    <dd><p>The current set of entries in the cache</p></dd><dt><a href='dagger/enginecacheentry'><abbr title="Dagger\EngineCacheEntry">EngineCacheEntry</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>An individual cache entry in a cache entry set</p></dd><dt><a href='dagger/enginecacheentryid'><abbr title="Dagger\EngineCacheEntryId">EngineCacheEntryId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>EngineCacheEntryID</code> scalar type represents an identifier for an object of type EngineCacheEntry.</p></dd><dt><a href='dagger/enginecacheentryset'><abbr title="Dagger\EngineCacheEntrySet">EngineCacheEntrySet</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A set of cache entries returned by a query to a cache</p></dd><dt><a href='dagger/enginecacheentryset#method_entries'>
<abbr title="Dagger\EngineCacheEntrySet">EngineCacheEntrySet</abbr>::entries</a>() &mdash; <em>Method in class <a href='dagger/enginecacheentryset'><abbr title="Dagger\EngineCacheEntrySet">EngineCacheEntrySet</abbr></a></em></dt>
                    <dd><p>The list of individual cache entries in the set</p></dd><dt><a href='dagger/enginecacheentryset#method_entryCount'>
<abbr title="Dagger\EngineCacheEntrySet">EngineCacheEntrySet</abbr>::entryCount</a>() &mdash; <em>Method in class <a href='dagger/enginecacheentryset'><abbr title="Dagger\EngineCacheEntrySet">EngineCacheEntrySet</abbr></a></em></dt>
                    <dd><p>The number of cache entries in this set.</p></dd><dt><a href='dagger/enginecacheentrysetid'><abbr title="Dagger\EngineCacheEntrySetId">EngineCacheEntrySetId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>EngineCacheEntrySetID</code> scalar type represents an identifier for an object of type EngineCacheEntrySet.</p></dd><dt><a href='dagger/enginecacheid'><abbr title="Dagger\EngineCacheId">EngineCacheId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>EngineCacheID</code> scalar type represents an identifier for an object of type EngineCache.</p></dd><dt><a href='dagger/engineid'><abbr title="Dagger\EngineId">EngineId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>EngineID</code> scalar type represents an identifier for an object of type Engine.</p></dd><dt><a href='dagger/enumtypedef'><abbr title="Dagger\EnumTypeDef">EnumTypeDef</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A definition of a custom enum defined in a Module.</p></dd><dt><a href='dagger/enumtypedefid'><abbr title="Dagger\EnumTypeDefId">EnumTypeDefId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>EnumTypeDefID</code> scalar type represents an identifier for an object of type EnumTypeDef.</p></dd><dt><a href='dagger/enumvaluetypedef'><abbr title="Dagger\EnumValueTypeDef">EnumValueTypeDef</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A definition of a value in a custom enum defined in a Module.</p></dd><dt><a href='dagger/enumvaluetypedefid'><abbr title="Dagger\EnumValueTypeDefId">EnumValueTypeDefId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>EnumValueTypeDefID</code> scalar type represents an identifier for an object of type EnumValueTypeDef.</p></dd><dt><a href='dagger/envvariable'><abbr title="Dagger\EnvVariable">EnvVariable</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>An environment variable name and value.</p></dd><dt><a href='dagger/envvariableid'><abbr title="Dagger\EnvVariableId">EnvVariableId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>EnvVariableID</code> scalar type represents an identifier for an object of type EnvVariable.</p></dd><dt><a href='dagger/error'><abbr title="Dagger\Error">Error</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd></dd><dt><a href='dagger/errorid'><abbr title="Dagger\ErrorId">ErrorId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>ErrorID</code> scalar type represents an identifier for an object of type Error.</p></dd><dt><a href='dagger/file#method_export'>
<abbr title="Dagger\File">File</abbr>::export</a>() &mdash; <em>Method in class <a href='dagger/file'><abbr title="Dagger\File">File</abbr></a></em></dt>
                    <dd><p>Writes the file to a file path on the host.</p></dd><dt><a href='dagger/listtypedef#method_elementTypeDef'>
<abbr title="Dagger\ListTypeDef">ListTypeDef</abbr>::elementTypeDef</a>() &mdash; <em>Method in class <a href='dagger/listtypedef'><abbr title="Dagger\ListTypeDef">ListTypeDef</abbr></a></em></dt>
                    <dd><p>The type of the elements in the list.</p></dd><dt><a href='dagger/module#method_enums'>
<abbr title="Dagger\Module">Module</abbr>::enums</a>() &mdash; <em>Method in class <a href='dagger/module'><abbr title="Dagger\Module">Module</abbr></a></em></dt>
                    <dd><p>Enumerations served by this module.</p></dd><dt><a href='dagger/modulesource#method_engineVersion'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::engineVersion</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>The engine version of the module.</p></dd><dt><a href='dagger/port#method_experimentalSkipHealthcheck'>
<abbr title="Dagger\Port">Port</abbr>::experimentalSkipHealthcheck</a>() &mdash; <em>Method in class <a href='dagger/port'><abbr title="Dagger\Port">Port</abbr></a></em></dt>
                    <dd><p>Skip the health check when run as a service.</p></dd><dt><a href='dagger/service#method_endpoint'>
<abbr title="Dagger\Service">Service</abbr>::endpoint</a>() &mdash; <em>Method in class <a href='dagger/service'><abbr title="Dagger\Service">Service</abbr></a></em></dt>
                    <dd><p>Retrieves an endpoint that clients can use to reach this container.</p></dd>        </dl><h2 id="letterF">F</h2>
        <dl id="indexF"><dt><a href='dagger/client#method_function'>
<abbr title="Dagger\Client">Client</abbr>::function</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Creates a function.</p></dd><dt><a href='dagger/client/abstractscalar#method_from'>
<abbr title="Dagger\Client\AbstractScalar">AbstractScalar</abbr>::from</a>() &mdash; <em>Method in class <a href='dagger/client/abstractscalar'><abbr title="Dagger\Client\AbstractScalar">AbstractScalar</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/container#method_file'>
<abbr title="Dagger\Container">Container</abbr>::file</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves a file at the given path.</p></dd><dt><a href='dagger/container#method_from'>
<abbr title="Dagger\Container">Container</abbr>::from</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Initializes this container from a pulled base image.</p></dd><dt><a href='dagger/directory#method_file'>
<abbr title="Dagger\Directory">Directory</abbr>::file</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Retrieves a file at the given path.</p></dd><dt><a href='dagger/fieldtypedef'><abbr title="Dagger\FieldTypeDef">FieldTypeDef</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A definition of a field on a custom object defined in a Module.</p></dd><dt><a href='dagger/fieldtypedefid'><abbr title="Dagger\FieldTypeDefId">FieldTypeDefId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>FieldTypeDefID</code> scalar type represents an identifier for an object of type FieldTypeDef.</p></dd><dt><a href='dagger/file'><abbr title="Dagger\File">File</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A file.</p></dd><dt><a href='dagger/fileid'><abbr title="Dagger\FileId">FileId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>FileID</code> scalar type represents an identifier for an object of type File.</p></dd><dt><a href='dagger/functionarg'><abbr title="Dagger\FunctionArg">FunctionArg</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>An argument accepted by a function.</p></dd><dt><a href='dagger/functionargid'><abbr title="Dagger\FunctionArgId">FunctionArgId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>FunctionArgID</code> scalar type represents an identifier for an object of type FunctionArg.</p></dd><dt><a href='dagger/functioncall'><abbr title="Dagger\FunctionCall">FunctionCall</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>An active function call.</p></dd><dt><a href='dagger/functioncallargvalue'><abbr title="Dagger\FunctionCallArgValue">FunctionCallArgValue</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A value passed as a named argument to a function call.</p></dd><dt><a href='dagger/functioncallargvalueid'><abbr title="Dagger\FunctionCallArgValueId">FunctionCallArgValueId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>FunctionCallArgValueID</code> scalar type represents an identifier for an object of type FunctionCallArgValue.</p></dd><dt><a href='dagger/functioncallid'><abbr title="Dagger\FunctionCallId">FunctionCallId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>FunctionCallID</code> scalar type represents an identifier for an object of type FunctionCall.</p></dd><dt><a href='dagger/functionid'><abbr title="Dagger\FunctionId">FunctionId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>FunctionID</code> scalar type represents an identifier for an object of type Function.</p></dd><dt><a href='dagger/function_'><abbr title="Dagger\Function_">Function_</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>Function represents a resolver provided by a Module.</p></dd><dt><a href='dagger/host#method_file'>
<abbr title="Dagger\Host">Host</abbr>::file</a>() &mdash; <em>Method in class <a href='dagger/host'><abbr title="Dagger\Host">Host</abbr></a></em></dt>
                    <dd><p>Accesses a file on the host.</p></dd><dt><a href='dagger/inputtypedef#method_fields'>
<abbr title="Dagger\InputTypeDef">InputTypeDef</abbr>::fields</a>() &mdash; <em>Method in class <a href='dagger/inputtypedef'><abbr title="Dagger\InputTypeDef">InputTypeDef</abbr></a></em></dt>
                    <dd><p>Static fields defined on this input object, if any.</p></dd><dt><a href='dagger/interfacetypedef#method_functions'>
<abbr title="Dagger\InterfaceTypeDef">InterfaceTypeDef</abbr>::functions</a>() &mdash; <em>Method in class <a href='dagger/interfacetypedef'><abbr title="Dagger\InterfaceTypeDef">InterfaceTypeDef</abbr></a></em></dt>
                    <dd><p>Functions defined on this interface, if any.</p></dd><dt><a href='dagger/objecttypedef#method_fields'>
<abbr title="Dagger\ObjectTypeDef">ObjectTypeDef</abbr>::fields</a>() &mdash; <em>Method in class <a href='dagger/objecttypedef'><abbr title="Dagger\ObjectTypeDef">ObjectTypeDef</abbr></a></em></dt>
                    <dd><p>Static fields defined on this object, if any.</p></dd><dt><a href='dagger/objecttypedef#method_functions'>
<abbr title="Dagger\ObjectTypeDef">ObjectTypeDef</abbr>::functions</a>() &mdash; <em>Method in class <a href='dagger/objecttypedef'><abbr title="Dagger\ObjectTypeDef">ObjectTypeDef</abbr></a></em></dt>
                    <dd><p>Functions defined on this object, if any.</p></dd><dt><a href='dagger/sourcemap#method_filename'>
<abbr title="Dagger\SourceMap">SourceMap</abbr>::filename</a>() &mdash; <em>Method in class <a href='dagger/sourcemap'><abbr title="Dagger\SourceMap">SourceMap</abbr></a></em></dt>
                    <dd><p>The filename from the module source.</p></dd>        </dl><h2 id="letterG">G</h2>
        <dl id="indexG"><dt><a href='dagger/client#method_generatedCode'>
<abbr title="Dagger\Client">Client</abbr>::generatedCode</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Create a code generation result, given a directory containing the generated code.</p></dd><dt><a href='dagger/client#method_git'>
<abbr title="Dagger\Client">Client</abbr>::git</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Queries a Git repository.</p></dd><dt>$<a href='dagger/client/abstractclient#property_graphQlClient'>
<abbr title="Dagger\Client\AbstractClient">AbstractClient</abbr>#graphQlClient</a> &mdash; <em>Property in class <a href='dagger/client/abstractclient'><abbr title="Dagger\Client\AbstractClient">AbstractClient</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/client/abstractscalar#method_getValue'>
<abbr title="Dagger\Client\AbstractScalar">AbstractScalar</abbr>::getValue</a>() &mdash; <em>Method in class <a href='dagger/client/abstractscalar'><abbr title="Dagger\Client\AbstractScalar">AbstractScalar</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/connection#method_get'>
<abbr title="Dagger\Connection">Connection</abbr>::get</a>() &mdash; <em>Method in class <a href='dagger/connection'><abbr title="Dagger\Connection">Connection</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/dagger#method_getClientInstance'>
<abbr title="Dagger\Dagger">Dagger</abbr>::getClientInstance</a>() &mdash; <em>Method in class <a href='dagger/dagger'><abbr title="Dagger\Dagger">Dagger</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/directory#method_glob'>
<abbr title="Dagger\Directory">Directory</abbr>::glob</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Returns a list of files and directories that matche the given pattern.</p></dd><dt><a href='dagger/generatedcode'><abbr title="Dagger\GeneratedCode">GeneratedCode</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The result of running an SDK's codegen.</p></dd><dt><a href='dagger/generatedcodeid'><abbr title="Dagger\GeneratedCodeId">GeneratedCodeId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>GeneratedCodeID</code> scalar type represents an identifier for an object of type GeneratedCode.</p></dd><dt><a href='dagger/gitref'><abbr title="Dagger\GitRef">GitRef</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A git ref (tag, branch, or commit).</p></dd><dt><a href='dagger/gitrefid'><abbr title="Dagger\GitRefId">GitRefId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>GitRefID</code> scalar type represents an identifier for an object of type GitRef.</p></dd><dt><a href='dagger/gitrepository'><abbr title="Dagger\GitRepository">GitRepository</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A git repository.</p></dd><dt><a href='dagger/gitrepositoryid'><abbr title="Dagger\GitRepositoryId">GitRepositoryId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>GitRepositoryID</code> scalar type represents an identifier for an object of type GitRepository.</p></dd><dt><a href='dagger/module#method_generatedContextDirectory'>
<abbr title="Dagger\Module">Module</abbr>::generatedContextDirectory</a>() &mdash; <em>Method in class <a href='dagger/module'><abbr title="Dagger\Module">Module</abbr></a></em></dt>
                    <dd><p>The generated files and directories made on top of the module source's context directory.</p></dd><dt><a href='dagger/modulesource#method_generatedContextDirectory'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::generatedContextDirectory</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>The generated files and directories made on top of the module source's context directory.</p></dd>        </dl><h2 id="letterH">H</h2>
        <dl id="indexH"><dt><a href='dagger/client#method_host'>
<abbr title="Dagger\Client">Client</abbr>::host</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Queries the host environment.</p></dd><dt><a href='dagger/client#method_http'>
<abbr title="Dagger\Client">Client</abbr>::http</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Returns a file containing an http remote url content.</p></dd><dt><a href='dagger/gitrepository#method_head'>
<abbr title="Dagger\GitRepository">GitRepository</abbr>::head</a>() &mdash; <em>Method in class <a href='dagger/gitrepository'><abbr title="Dagger\GitRepository">GitRepository</abbr></a></em></dt>
                    <dd><p>Returns details for HEAD.</p></dd><dt><a href='dagger/host'><abbr title="Dagger\Host">Host</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>Information about the host environment.</p></dd><dt><a href='dagger/hostid'><abbr title="Dagger\HostId">HostId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>HostID</code> scalar type represents an identifier for an object of type Host.</p></dd><dt><a href='dagger/modulesource#method_htmlRepoURL'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::htmlRepoURL</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>The URL to access the web view of the repository (e.g., GitHub, GitLab, Bitbucket). Only valid for git sources.</p></dd><dt><a href='dagger/modulesource#method_htmlURL'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::htmlURL</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>The URL to the source's git repo in a web browser. Only valid for git sources.</p></dd><dt><a href='dagger/service#method_hostname'>
<abbr title="Dagger\Service">Service</abbr>::hostname</a>() &mdash; <em>Method in class <a href='dagger/service'><abbr title="Dagger\Service">Service</abbr></a></em></dt>
                    <dd><p>Retrieves a hostname which can be used by clients to reach this container.</p></dd>        </dl><h2 id="letterI">I</h2>
        <dl id="indexI"><dt><a href='dagger/attribute/ignore'><abbr title="Dagger\Attribute\Ignore">Ignore</abbr></a> &mdash; <em>Class in namespace <a href='dagger/attribute'>Dagger\Attribute</a></em></dt>
                    <dd></dd><dt>$<a href='dagger/attribute/ignore#property_ignore'>
<abbr title="Dagger\Attribute\Ignore">Ignore</abbr>#ignore</a> &mdash; <em>Property in class <a href='dagger/attribute/ignore'><abbr title="Dagger\Attribute\Ignore">Ignore</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/cachevolume#method_id'>
<abbr title="Dagger\CacheVolume">CacheVolume</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/cachevolume'><abbr title="Dagger\CacheVolume">CacheVolume</abbr></a></em></dt>
                    <dd><p>A unique identifier for this CacheVolume.</p></dd><dt><a href='dagger/client/idable'><abbr title="Dagger\Client\IdAble">IdAble</abbr></a> &mdash; <em>Class in namespace <a href='dagger/client'>Dagger\Client</a></em></dt>
                    <dd></dd><dt><a href='dagger/client/idable#method_id'>
<abbr title="Dagger\Client\IdAble">IdAble</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/client/idable'><abbr title="Dagger\Client\IdAble">IdAble</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/container#method_id'>
<abbr title="Dagger\Container">Container</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>A unique identifier for this Container.</p></dd><dt><a href='dagger/container#method_imageRef'>
<abbr title="Dagger\Container">Container</abbr>::imageRef</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>The unique image reference which can only be retrieved immediately after the 'Container.From' call.</p></dd><dt><a href='dagger/container#method_import'>
<abbr title="Dagger\Container">Container</abbr>::import</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Reads the container from an OCI tarball.</p></dd><dt><a href='dagger/currentmodule#method_id'>
<abbr title="Dagger\CurrentModule">CurrentModule</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/currentmodule'><abbr title="Dagger\CurrentModule">CurrentModule</abbr></a></em></dt>
                    <dd><p>A unique identifier for this CurrentModule.</p></dd><dt><a href='dagger/directory#method_id'>
<abbr title="Dagger\Directory">Directory</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>A unique identifier for this Directory.</p></dd><dt><a href='dagger/engine#method_id'>
<abbr title="Dagger\Engine">Engine</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/engine'><abbr title="Dagger\Engine">Engine</abbr></a></em></dt>
                    <dd><p>A unique identifier for this Engine.</p></dd><dt><a href='dagger/enginecache#method_id'>
<abbr title="Dagger\EngineCache">EngineCache</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/enginecache'><abbr title="Dagger\EngineCache">EngineCache</abbr></a></em></dt>
                    <dd><p>A unique identifier for this EngineCache.</p></dd><dt><a href='dagger/enginecacheentry#method_id'>
<abbr title="Dagger\EngineCacheEntry">EngineCacheEntry</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/enginecacheentry'><abbr title="Dagger\EngineCacheEntry">EngineCacheEntry</abbr></a></em></dt>
                    <dd><p>A unique identifier for this EngineCacheEntry.</p></dd><dt><a href='dagger/enginecacheentryset#method_id'>
<abbr title="Dagger\EngineCacheEntrySet">EngineCacheEntrySet</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/enginecacheentryset'><abbr title="Dagger\EngineCacheEntrySet">EngineCacheEntrySet</abbr></a></em></dt>
                    <dd><p>A unique identifier for this EngineCacheEntrySet.</p></dd><dt><a href='dagger/enumtypedef#method_id'>
<abbr title="Dagger\EnumTypeDef">EnumTypeDef</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/enumtypedef'><abbr title="Dagger\EnumTypeDef">EnumTypeDef</abbr></a></em></dt>
                    <dd><p>A unique identifier for this EnumTypeDef.</p></dd><dt><a href='dagger/enumvaluetypedef#method_id'>
<abbr title="Dagger\EnumValueTypeDef">EnumValueTypeDef</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/enumvaluetypedef'><abbr title="Dagger\EnumValueTypeDef">EnumValueTypeDef</abbr></a></em></dt>
                    <dd><p>A unique identifier for this EnumValueTypeDef.</p></dd><dt><a href='dagger/envvariable#method_id'>
<abbr title="Dagger\EnvVariable">EnvVariable</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/envvariable'><abbr title="Dagger\EnvVariable">EnvVariable</abbr></a></em></dt>
                    <dd><p>A unique identifier for this EnvVariable.</p></dd><dt><a href='dagger/error#method_id'>
<abbr title="Dagger\Error">Error</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/error'><abbr title="Dagger\Error">Error</abbr></a></em></dt>
                    <dd><p>A unique identifier for this Error.</p></dd><dt><a href='dagger/fieldtypedef#method_id'>
<abbr title="Dagger\FieldTypeDef">FieldTypeDef</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/fieldtypedef'><abbr title="Dagger\FieldTypeDef">FieldTypeDef</abbr></a></em></dt>
                    <dd><p>A unique identifier for this FieldTypeDef.</p></dd><dt><a href='dagger/file#method_id'>
<abbr title="Dagger\File">File</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/file'><abbr title="Dagger\File">File</abbr></a></em></dt>
                    <dd><p>A unique identifier for this File.</p></dd><dt><a href='dagger/functionarg#method_id'>
<abbr title="Dagger\FunctionArg">FunctionArg</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/functionarg'><abbr title="Dagger\FunctionArg">FunctionArg</abbr></a></em></dt>
                    <dd><p>A unique identifier for this FunctionArg.</p></dd><dt><a href='dagger/functionarg#method_ignore'>
<abbr title="Dagger\FunctionArg">FunctionArg</abbr>::ignore</a>() &mdash; <em>Method in class <a href='dagger/functionarg'><abbr title="Dagger\FunctionArg">FunctionArg</abbr></a></em></dt>
                    <dd><p>Only applies to arguments of type Directory. The ignore patterns are applied to the input directory, and matching entries are filtered out, in a cache-efficient manner.</p></dd><dt><a href='dagger/functioncall#method_id'>
<abbr title="Dagger\FunctionCall">FunctionCall</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/functioncall'><abbr title="Dagger\FunctionCall">FunctionCall</abbr></a></em></dt>
                    <dd><p>A unique identifier for this FunctionCall.</p></dd><dt><a href='dagger/functioncall#method_inputArgs'>
<abbr title="Dagger\FunctionCall">FunctionCall</abbr>::inputArgs</a>() &mdash; <em>Method in class <a href='dagger/functioncall'><abbr title="Dagger\FunctionCall">FunctionCall</abbr></a></em></dt>
                    <dd><p>The argument values the function is being invoked with.</p></dd><dt><a href='dagger/functioncallargvalue#method_id'>
<abbr title="Dagger\FunctionCallArgValue">FunctionCallArgValue</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/functioncallargvalue'><abbr title="Dagger\FunctionCallArgValue">FunctionCallArgValue</abbr></a></em></dt>
                    <dd><p>A unique identifier for this FunctionCallArgValue.</p></dd><dt><a href='dagger/function_#method_id'>
<abbr title="Dagger\Function_">Function_</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/function_'><abbr title="Dagger\Function_">Function_</abbr></a></em></dt>
                    <dd><p>A unique identifier for this Function.</p></dd><dt><a href='dagger/generatedcode#method_id'>
<abbr title="Dagger\GeneratedCode">GeneratedCode</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/generatedcode'><abbr title="Dagger\GeneratedCode">GeneratedCode</abbr></a></em></dt>
                    <dd><p>A unique identifier for this GeneratedCode.</p></dd><dt><a href='dagger/gitref#method_id'>
<abbr title="Dagger\GitRef">GitRef</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/gitref'><abbr title="Dagger\GitRef">GitRef</abbr></a></em></dt>
                    <dd><p>A unique identifier for this GitRef.</p></dd><dt><a href='dagger/gitrepository#method_id'>
<abbr title="Dagger\GitRepository">GitRepository</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/gitrepository'><abbr title="Dagger\GitRepository">GitRepository</abbr></a></em></dt>
                    <dd><p>A unique identifier for this GitRepository.</p></dd><dt><a href='dagger/host#method_id'>
<abbr title="Dagger\Host">Host</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/host'><abbr title="Dagger\Host">Host</abbr></a></em></dt>
                    <dd><p>A unique identifier for this Host.</p></dd><dt><a href='dagger/inputtypedef'><abbr title="Dagger\InputTypeDef">InputTypeDef</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A graphql input type, which is essentially just a group of named args.</p></dd><dt><a href='dagger/inputtypedef#method_id'>
<abbr title="Dagger\InputTypeDef">InputTypeDef</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/inputtypedef'><abbr title="Dagger\InputTypeDef">InputTypeDef</abbr></a></em></dt>
                    <dd><p>A unique identifier for this InputTypeDef.</p></dd><dt><a href='dagger/inputtypedefid'><abbr title="Dagger\InputTypeDefId">InputTypeDefId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>InputTypeDefID</code> scalar type represents an identifier for an object of type InputTypeDef.</p></dd><dt><a href='dagger/interfacetypedef'><abbr title="Dagger\InterfaceTypeDef">InterfaceTypeDef</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A definition of a custom interface defined in a Module.</p></dd><dt><a href='dagger/interfacetypedef#method_id'>
<abbr title="Dagger\InterfaceTypeDef">InterfaceTypeDef</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/interfacetypedef'><abbr title="Dagger\InterfaceTypeDef">InterfaceTypeDef</abbr></a></em></dt>
                    <dd><p>A unique identifier for this InterfaceTypeDef.</p></dd><dt><a href='dagger/interfacetypedefid'><abbr title="Dagger\InterfaceTypeDefId">InterfaceTypeDefId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>InterfaceTypeDefID</code> scalar type represents an identifier for an object of type InterfaceTypeDef.</p></dd><dt><a href='dagger/label#method_id'>
<abbr title="Dagger\Label">Label</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/label'><abbr title="Dagger\Label">Label</abbr></a></em></dt>
                    <dd><p>A unique identifier for this Label.</p></dd><dt><a href='dagger/listtypedef#method_id'>
<abbr title="Dagger\ListTypeDef">ListTypeDef</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/listtypedef'><abbr title="Dagger\ListTypeDef">ListTypeDef</abbr></a></em></dt>
                    <dd><p>A unique identifier for this ListTypeDef.</p></dd><dt><a href='dagger/module#method_id'>
<abbr title="Dagger\Module">Module</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/module'><abbr title="Dagger\Module">Module</abbr></a></em></dt>
                    <dd><p>A unique identifier for this Module.</p></dd><dt><a href='dagger/module#method_interfaces'>
<abbr title="Dagger\Module">Module</abbr>::interfaces</a>() &mdash; <em>Method in class <a href='dagger/module'><abbr title="Dagger\Module">Module</abbr></a></em></dt>
                    <dd><p>Interfaces served by this module.</p></dd><dt><a href='dagger/modulesource#method_id'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>A unique identifier for this ModuleSource.</p></dd><dt><a href='dagger/objecttypedef#method_id'>
<abbr title="Dagger\ObjectTypeDef">ObjectTypeDef</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/objecttypedef'><abbr title="Dagger\ObjectTypeDef">ObjectTypeDef</abbr></a></em></dt>
                    <dd><p>A unique identifier for this ObjectTypeDef.</p></dd><dt><a href='dagger/port#method_id'>
<abbr title="Dagger\Port">Port</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/port'><abbr title="Dagger\Port">Port</abbr></a></em></dt>
                    <dd><p>A unique identifier for this Port.</p></dd><dt><a href='dagger/sdkconfig#method_id'>
<abbr title="Dagger\SDKConfig">SDKConfig</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/sdkconfig'><abbr title="Dagger\SDKConfig">SDKConfig</abbr></a></em></dt>
                    <dd><p>A unique identifier for this SDKConfig.</p></dd><dt><a href='dagger/scalartypedef#method_id'>
<abbr title="Dagger\ScalarTypeDef">ScalarTypeDef</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/scalartypedef'><abbr title="Dagger\ScalarTypeDef">ScalarTypeDef</abbr></a></em></dt>
                    <dd><p>A unique identifier for this ScalarTypeDef.</p></dd><dt><a href='dagger/secret#method_id'>
<abbr title="Dagger\Secret">Secret</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/secret'><abbr title="Dagger\Secret">Secret</abbr></a></em></dt>
                    <dd><p>A unique identifier for this Secret.</p></dd><dt><a href='dagger/service#method_id'>
<abbr title="Dagger\Service">Service</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/service'><abbr title="Dagger\Service">Service</abbr></a></em></dt>
                    <dd><p>A unique identifier for this Service.</p></dd><dt><a href='dagger/socket#method_id'>
<abbr title="Dagger\Socket">Socket</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/socket'><abbr title="Dagger\Socket">Socket</abbr></a></em></dt>
                    <dd><p>A unique identifier for this Socket.</p></dd><dt><a href='dagger/sourcemap#method_id'>
<abbr title="Dagger\SourceMap">SourceMap</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/sourcemap'><abbr title="Dagger\SourceMap">SourceMap</abbr></a></em></dt>
                    <dd><p>A unique identifier for this SourceMap.</p></dd><dt><a href='dagger/terminal#method_id'>
<abbr title="Dagger\Terminal">Terminal</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/terminal'><abbr title="Dagger\Terminal">Terminal</abbr></a></em></dt>
                    <dd><p>A unique identifier for this Terminal.</p></dd><dt><a href='dagger/typedef#method_id'>
<abbr title="Dagger\TypeDef">TypeDef</abbr>::id</a>() &mdash; <em>Method in class <a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a></em></dt>
                    <dd><p>A unique identifier for this TypeDef.</p></dd>        </dl><h2 id="letterJ">J</h2>
        <dl id="indexJ"><dt><a href='dagger/json'><abbr title="Dagger\Json">Json</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>An arbitrary JSON-encoded value.</p></dd>        </dl><h2 id="letterK">K</h2>
        <dl id="indexK"><dt><a href='dagger/enginecache#method_keepBytes'>
<abbr title="Dagger\EngineCache">EngineCache</abbr>::keepBytes</a>() &mdash; <em>Method in class <a href='dagger/enginecache'><abbr title="Dagger\EngineCache">EngineCache</abbr></a></em></dt>
                    <dd><p>The maximum bytes to keep in the cache without pruning, after which automatic pruning may kick in.</p></dd><dt><a href='dagger/modulesource#method_kind'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::kind</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>The kind of module source (currently local, git or dir).</p></dd><dt><a href='dagger/typedef#method_kind'>
<abbr title="Dagger\TypeDef">TypeDef</abbr>::kind</a>() &mdash; <em>Method in class <a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a></em></dt>
                    <dd><p>The kind of type this is (e.g. primitive, list, object).</p></dd>        </dl><h2 id="letterL">L</h2>
        <dl id="indexL"><dt><a href='dagger/attribute/listoftype'><abbr title="Dagger\Attribute\ListOfType">ListOfType</abbr></a> &mdash; <em>Class in namespace <a href='dagger/attribute'>Dagger\Attribute</a></em></dt>
                    <dd></dd><dt><a href='dagger/client#method_loadCacheVolumeFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadCacheVolumeFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a CacheVolume from its ID.</p></dd><dt><a href='dagger/client#method_loadContainerFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadContainerFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a Container from its ID.</p></dd><dt><a href='dagger/client#method_loadCurrentModuleFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadCurrentModuleFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a CurrentModule from its ID.</p></dd><dt><a href='dagger/client#method_loadDirectoryFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadDirectoryFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a Directory from its ID.</p></dd><dt><a href='dagger/client#method_loadEngineCacheEntryFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadEngineCacheEntryFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a EngineCacheEntry from its ID.</p></dd><dt><a href='dagger/client#method_loadEngineCacheEntrySetFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadEngineCacheEntrySetFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a EngineCacheEntrySet from its ID.</p></dd><dt><a href='dagger/client#method_loadEngineCacheFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadEngineCacheFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a EngineCache from its ID.</p></dd><dt><a href='dagger/client#method_loadEngineFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadEngineFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a Engine from its ID.</p></dd><dt><a href='dagger/client#method_loadEnumTypeDefFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadEnumTypeDefFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a EnumTypeDef from its ID.</p></dd><dt><a href='dagger/client#method_loadEnumValueTypeDefFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadEnumValueTypeDefFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a EnumValueTypeDef from its ID.</p></dd><dt><a href='dagger/client#method_loadEnvVariableFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadEnvVariableFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a EnvVariable from its ID.</p></dd><dt><a href='dagger/client#method_loadErrorFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadErrorFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a Error from its ID.</p></dd><dt><a href='dagger/client#method_loadFieldTypeDefFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadFieldTypeDefFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a FieldTypeDef from its ID.</p></dd><dt><a href='dagger/client#method_loadFileFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadFileFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a File from its ID.</p></dd><dt><a href='dagger/client#method_loadFunctionArgFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadFunctionArgFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a FunctionArg from its ID.</p></dd><dt><a href='dagger/client#method_loadFunctionCallArgValueFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadFunctionCallArgValueFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a FunctionCallArgValue from its ID.</p></dd><dt><a href='dagger/client#method_loadFunctionCallFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadFunctionCallFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a FunctionCall from its ID.</p></dd><dt><a href='dagger/client#method_loadFunctionFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadFunctionFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a Function from its ID.</p></dd><dt><a href='dagger/client#method_loadGeneratedCodeFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadGeneratedCodeFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a GeneratedCode from its ID.</p></dd><dt><a href='dagger/client#method_loadGitRefFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadGitRefFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a GitRef from its ID.</p></dd><dt><a href='dagger/client#method_loadGitRepositoryFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadGitRepositoryFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a GitRepository from its ID.</p></dd><dt><a href='dagger/client#method_loadHostFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadHostFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a Host from its ID.</p></dd><dt><a href='dagger/client#method_loadInputTypeDefFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadInputTypeDefFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a InputTypeDef from its ID.</p></dd><dt><a href='dagger/client#method_loadInterfaceTypeDefFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadInterfaceTypeDefFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a InterfaceTypeDef from its ID.</p></dd><dt><a href='dagger/client#method_loadLabelFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadLabelFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a Label from its ID.</p></dd><dt><a href='dagger/client#method_loadListTypeDefFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadListTypeDefFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a ListTypeDef from its ID.</p></dd><dt><a href='dagger/client#method_loadModuleFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadModuleFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a Module from its ID.</p></dd><dt><a href='dagger/client#method_loadModuleSourceFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadModuleSourceFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a ModuleSource from its ID.</p></dd><dt><a href='dagger/client#method_loadObjectTypeDefFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadObjectTypeDefFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a ObjectTypeDef from its ID.</p></dd><dt><a href='dagger/client#method_loadPortFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadPortFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a Port from its ID.</p></dd><dt><a href='dagger/client#method_loadSDKConfigFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadSDKConfigFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a SDKConfig from its ID.</p></dd><dt><a href='dagger/client#method_loadScalarTypeDefFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadScalarTypeDefFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a ScalarTypeDef from its ID.</p></dd><dt><a href='dagger/client#method_loadSecretFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadSecretFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a Secret from its ID.</p></dd><dt><a href='dagger/client#method_loadSecretFromName'>
<abbr title="Dagger\Client">Client</abbr>::loadSecretFromName</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a Secret from its Name.</p></dd><dt><a href='dagger/client#method_loadServiceFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadServiceFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a Service from its ID.</p></dd><dt><a href='dagger/client#method_loadSocketFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadSocketFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a Socket from its ID.</p></dd><dt><a href='dagger/client#method_loadSourceMapFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadSourceMapFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a SourceMap from its ID.</p></dd><dt><a href='dagger/client#method_loadTerminalFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadTerminalFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a Terminal from its ID.</p></dd><dt><a href='dagger/client#method_loadTypeDefFromID'>
<abbr title="Dagger\Client">Client</abbr>::loadTypeDefFromID</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Load a TypeDef from its ID.</p></dd><dt>$<a href='dagger/client/abstractobject#property_lastQuery'>
<abbr title="Dagger\Client\AbstractObject">AbstractObject</abbr>#lastQuery</a> &mdash; <em>Property in class <a href='dagger/client/abstractobject'><abbr title="Dagger\Client\AbstractObject">AbstractObject</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/container#method_label'>
<abbr title="Dagger\Container">Container</abbr>::label</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves the value of the specified label.</p></dd><dt><a href='dagger/container#method_labels'>
<abbr title="Dagger\Container">Container</abbr>::labels</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves the list of labels passed to container.</p></dd><dt><a href='dagger/engine#method_localCache'>
<abbr title="Dagger\Engine">Engine</abbr>::localCache</a>() &mdash; <em>Method in class <a href='dagger/engine'><abbr title="Dagger\Engine">Engine</abbr></a></em></dt>
                    <dd><p>The local (on-disk) cache for the Dagger engine</p></dd><dt><a href='dagger/label'><abbr title="Dagger\Label">Label</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A simple key value object that represents a label.</p></dd><dt><a href='dagger/labelid'><abbr title="Dagger\LabelId">LabelId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>LabelID</code> scalar type represents an identifier for an object of type Label.</p></dd><dt><a href='dagger/listtypedef'><abbr title="Dagger\ListTypeDef">ListTypeDef</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A definition of a list type in a Module.</p></dd><dt><a href='dagger/listtypedefid'><abbr title="Dagger\ListTypeDefId">ListTypeDefId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>ListTypeDefID</code> scalar type represents an identifier for an object of type ListTypeDef.</p></dd><dt><a href='dagger/modulesource#method_localContextDirectoryPath'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::localContextDirectoryPath</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>The full absolute path to the context directory on the caller's host filesystem that this module source is loaded from. Only valid for local module sources.</p></dd><dt><a href='dagger/sourcemap#method_line'>
<abbr title="Dagger\SourceMap">SourceMap</abbr>::line</a>() &mdash; <em>Method in class <a href='dagger/sourcemap'><abbr title="Dagger\SourceMap">SourceMap</abbr></a></em></dt>
                    <dd><p>The line number within the filename.</p></dd>        </dl><h2 id="letterM">M</h2>
        <dl id="indexM"><dt><a href='dagger/client#method_module'>
<abbr title="Dagger\Client">Client</abbr>::module</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Create a new module.</p></dd><dt><a href='dagger/client#method_moduleSource'>
<abbr title="Dagger\Client">Client</abbr>::moduleSource</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Create a new module source instance from a source ref string</p></dd><dt><a href='dagger/container#method_mounts'>
<abbr title="Dagger\Container">Container</abbr>::mounts</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves the list of paths where a directory is mounted.</p></dd><dt><a href='dagger/enginecache#method_maxUsedSpace'>
<abbr title="Dagger\EngineCache">EngineCache</abbr>::maxUsedSpace</a>() &mdash; <em>Method in class <a href='dagger/enginecache'><abbr title="Dagger\EngineCache">EngineCache</abbr></a></em></dt>
                    <dd><p>The maximum bytes to keep in the cache without pruning.</p></dd><dt><a href='dagger/enginecache#method_minFreeSpace'>
<abbr title="Dagger\EngineCache">EngineCache</abbr>::minFreeSpace</a>() &mdash; <em>Method in class <a href='dagger/enginecache'><abbr title="Dagger\EngineCache">EngineCache</abbr></a></em></dt>
                    <dd><p>The target amount of free disk space the garbage collector will attempt to leave.</p></dd><dt><a href='dagger/enginecacheentry#method_mostRecentUseTimeUnixNano'>
<abbr title="Dagger\EngineCacheEntry">EngineCacheEntry</abbr>::mostRecentUseTimeUnixNano</a>() &mdash; <em>Method in class <a href='dagger/enginecacheentry'><abbr title="Dagger\EngineCacheEntry">EngineCacheEntry</abbr></a></em></dt>
                    <dd><p>The most recent time the cache entry was used, in Unix nanoseconds.</p></dd><dt><a href='dagger/error#method_message'>
<abbr title="Dagger\Error">Error</abbr>::message</a>() &mdash; <em>Method in class <a href='dagger/error'><abbr title="Dagger\Error">Error</abbr></a></em></dt>
                    <dd><p>A description of the error.</p></dd><dt><a href='dagger/module'><abbr title="Dagger\Module">Module</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A Dagger module.</p></dd><dt><a href='dagger/moduleid'><abbr title="Dagger\ModuleId">ModuleId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>ModuleID</code> scalar type represents an identifier for an object of type Module.</p></dd><dt><a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The source needed to load and run a module, along with any metadata about the source such as versions/urls/etc.</p></dd><dt><a href='dagger/modulesource#method_moduleName'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::moduleName</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>The name of the module, including any setting via the withName API.</p></dd><dt><a href='dagger/modulesource#method_moduleOriginalName'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::moduleOriginalName</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>The original name of the module as read from the module's dagger.json (or set for the first time with the withName API).</p></dd><dt><a href='dagger/modulesourceid'><abbr title="Dagger\ModuleSourceId">ModuleSourceId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>ModuleSourceID</code> scalar type represents an identifier for an object of type ModuleSource.</p></dd><dt><a href='dagger/sourcemap#method_module'>
<abbr title="Dagger\SourceMap">SourceMap</abbr>::module</a>() &mdash; <em>Method in class <a href='dagger/sourcemap'><abbr title="Dagger\SourceMap">SourceMap</abbr></a></em></dt>
                    <dd><p>The module dependency this was declared in.</p></dd>        </dl><h2 id="letterN">N</h2>
        <dl id="indexN"><dt><a href='dagger/connection#method_newEnvSession'>
<abbr title="Dagger\Connection">Connection</abbr>::newEnvSession</a>() &mdash; <em>Method in class <a href='dagger/connection'><abbr title="Dagger\Connection">Connection</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/connection#method_newProcessSession'>
<abbr title="Dagger\Connection">Connection</abbr>::newProcessSession</a>() &mdash; <em>Method in class <a href='dagger/connection'><abbr title="Dagger\Connection">Connection</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/currentmodule#method_name'>
<abbr title="Dagger\CurrentModule">CurrentModule</abbr>::name</a>() &mdash; <em>Method in class <a href='dagger/currentmodule'><abbr title="Dagger\CurrentModule">CurrentModule</abbr></a></em></dt>
                    <dd><p>The name of the module being executed in</p></dd><dt><a href='dagger/enumtypedef#method_name'>
<abbr title="Dagger\EnumTypeDef">EnumTypeDef</abbr>::name</a>() &mdash; <em>Method in class <a href='dagger/enumtypedef'><abbr title="Dagger\EnumTypeDef">EnumTypeDef</abbr></a></em></dt>
                    <dd><p>The name of the enum.</p></dd><dt><a href='dagger/enumvaluetypedef#method_name'>
<abbr title="Dagger\EnumValueTypeDef">EnumValueTypeDef</abbr>::name</a>() &mdash; <em>Method in class <a href='dagger/enumvaluetypedef'><abbr title="Dagger\EnumValueTypeDef">EnumValueTypeDef</abbr></a></em></dt>
                    <dd><p>The name of the enum value.</p></dd><dt><a href='dagger/envvariable#method_name'>
<abbr title="Dagger\EnvVariable">EnvVariable</abbr>::name</a>() &mdash; <em>Method in class <a href='dagger/envvariable'><abbr title="Dagger\EnvVariable">EnvVariable</abbr></a></em></dt>
                    <dd><p>The environment variable name.</p></dd><dt><a href='dagger/fieldtypedef#method_name'>
<abbr title="Dagger\FieldTypeDef">FieldTypeDef</abbr>::name</a>() &mdash; <em>Method in class <a href='dagger/fieldtypedef'><abbr title="Dagger\FieldTypeDef">FieldTypeDef</abbr></a></em></dt>
                    <dd><p>The name of the field in lowerCamelCase format.</p></dd><dt><a href='dagger/file#method_name'>
<abbr title="Dagger\File">File</abbr>::name</a>() &mdash; <em>Method in class <a href='dagger/file'><abbr title="Dagger\File">File</abbr></a></em></dt>
                    <dd><p>Retrieves the name of the file.</p></dd><dt><a href='dagger/functionarg#method_name'>
<abbr title="Dagger\FunctionArg">FunctionArg</abbr>::name</a>() &mdash; <em>Method in class <a href='dagger/functionarg'><abbr title="Dagger\FunctionArg">FunctionArg</abbr></a></em></dt>
                    <dd><p>The name of the argument in lowerCamelCase format.</p></dd><dt><a href='dagger/functioncall#method_name'>
<abbr title="Dagger\FunctionCall">FunctionCall</abbr>::name</a>() &mdash; <em>Method in class <a href='dagger/functioncall'><abbr title="Dagger\FunctionCall">FunctionCall</abbr></a></em></dt>
                    <dd><p>The name of the function being called.</p></dd><dt><a href='dagger/functioncallargvalue#method_name'>
<abbr title="Dagger\FunctionCallArgValue">FunctionCallArgValue</abbr>::name</a>() &mdash; <em>Method in class <a href='dagger/functioncallargvalue'><abbr title="Dagger\FunctionCallArgValue">FunctionCallArgValue</abbr></a></em></dt>
                    <dd><p>The name of the argument.</p></dd><dt><a href='dagger/function_#method_name'>
<abbr title="Dagger\Function_">Function_</abbr>::name</a>() &mdash; <em>Method in class <a href='dagger/function_'><abbr title="Dagger\Function_">Function_</abbr></a></em></dt>
                    <dd><p>The name of the function.</p></dd><dt><a href='dagger/inputtypedef#method_name'>
<abbr title="Dagger\InputTypeDef">InputTypeDef</abbr>::name</a>() &mdash; <em>Method in class <a href='dagger/inputtypedef'><abbr title="Dagger\InputTypeDef">InputTypeDef</abbr></a></em></dt>
                    <dd><p>The name of the input object.</p></dd><dt><a href='dagger/interfacetypedef#method_name'>
<abbr title="Dagger\InterfaceTypeDef">InterfaceTypeDef</abbr>::name</a>() &mdash; <em>Method in class <a href='dagger/interfacetypedef'><abbr title="Dagger\InterfaceTypeDef">InterfaceTypeDef</abbr></a></em></dt>
                    <dd><p>The name of the interface.</p></dd><dt><a href='dagger/label#method_name'>
<abbr title="Dagger\Label">Label</abbr>::name</a>() &mdash; <em>Method in class <a href='dagger/label'><abbr title="Dagger\Label">Label</abbr></a></em></dt>
                    <dd><p>The label name.</p></dd><dt><a href='dagger/module#method_name'>
<abbr title="Dagger\Module">Module</abbr>::name</a>() &mdash; <em>Method in class <a href='dagger/module'><abbr title="Dagger\Module">Module</abbr></a></em></dt>
                    <dd><p>The name of the module</p></dd><dt><a href='dagger/objecttypedef#method_name'>
<abbr title="Dagger\ObjectTypeDef">ObjectTypeDef</abbr>::name</a>() &mdash; <em>Method in class <a href='dagger/objecttypedef'><abbr title="Dagger\ObjectTypeDef">ObjectTypeDef</abbr></a></em></dt>
                    <dd><p>The name of the object.</p></dd><dt><a href='dagger/scalartypedef#method_name'>
<abbr title="Dagger\ScalarTypeDef">ScalarTypeDef</abbr>::name</a>() &mdash; <em>Method in class <a href='dagger/scalartypedef'><abbr title="Dagger\ScalarTypeDef">ScalarTypeDef</abbr></a></em></dt>
                    <dd><p>The name of the scalar.</p></dd><dt><a href='dagger/secret#method_name'>
<abbr title="Dagger\Secret">Secret</abbr>::name</a>() &mdash; <em>Method in class <a href='dagger/secret'><abbr title="Dagger\Secret">Secret</abbr></a></em></dt>
                    <dd><p>The name of this secret.</p></dd>        </dl><h2 id="letterO">O</h2>
        <dl id="indexO"><dt><a href='dagger/module#method_objects'>
<abbr title="Dagger\Module">Module</abbr>::objects</a>() &mdash; <em>Method in class <a href='dagger/module'><abbr title="Dagger\Module">Module</abbr></a></em></dt>
                    <dd><p>Objects served by this module.</p></dd><dt><a href='dagger/modulesource#method_originalSubpath'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::originalSubpath</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>The path to the directory containing the module's source code, relative to the context directory.</p></dd><dt><a href='dagger/objecttypedef'><abbr title="Dagger\ObjectTypeDef">ObjectTypeDef</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A definition of a custom object defined in a Module.</p></dd><dt><a href='dagger/objecttypedefid'><abbr title="Dagger\ObjectTypeDefId">ObjectTypeDefId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>ObjectTypeDefID</code> scalar type represents an identifier for an object of type ObjectTypeDef.</p></dd><dt><a href='dagger/typedef#method_optional'>
<abbr title="Dagger\TypeDef">TypeDef</abbr>::optional</a>() &mdash; <em>Method in class <a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a></em></dt>
                    <dd><p>Whether this type can be set to null. Defaults to false.</p></dd>        </dl><h2 id="letterP">P</h2>
        <dl id="indexP"><dt><a href='dagger/container#method_platform'>
<abbr title="Dagger\Container">Container</abbr>::platform</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>The platform this container executes and publishes as.</p></dd><dt><a href='dagger/container#method_publish'>
<abbr title="Dagger\Container">Container</abbr>::publish</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Publishes this container as a new image to the specified address.</p></dd><dt><a href='dagger/enginecache#method_prune'>
<abbr title="Dagger\EngineCache">EngineCache</abbr>::prune</a>() &mdash; <em>Method in class <a href='dagger/enginecache'><abbr title="Dagger\EngineCache">EngineCache</abbr></a></em></dt>
                    <dd><p>Prune the cache of releaseable entries</p></dd><dt><a href='dagger/functioncall#method_parent'>
<abbr title="Dagger\FunctionCall">FunctionCall</abbr>::parent</a>() &mdash; <em>Method in class <a href='dagger/functioncall'><abbr title="Dagger\FunctionCall">FunctionCall</abbr></a></em></dt>
                    <dd><p>The value of the parent object of the function being called. If the function is top-level to the module, this is always an empty object.</p></dd><dt><a href='dagger/functioncall#method_parentName'>
<abbr title="Dagger\FunctionCall">FunctionCall</abbr>::parentName</a>() &mdash; <em>Method in class <a href='dagger/functioncall'><abbr title="Dagger\FunctionCall">FunctionCall</abbr></a></em></dt>
                    <dd><p>The name of the parent object of the function being called. If the function is top-level to the module, this is the name of the module.</p></dd><dt><a href='dagger/modulesource#method_pin'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::pin</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>The pinned version of this module source.</p></dd><dt><a href='dagger/pipelinelabel'><abbr title="Dagger\PipelineLabel">PipelineLabel</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>Key value object that represents a pipeline label.</p></dd><dt><a href='dagger/platform'><abbr title="Dagger\Platform">Platform</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The platform config OS and architecture in a Container.</p></dd><dt><a href='dagger/port'><abbr title="Dagger\Port">Port</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A port exposed by a container.</p></dd><dt><a href='dagger/port#method_port'>
<abbr title="Dagger\Port">Port</abbr>::port</a>() &mdash; <em>Method in class <a href='dagger/port'><abbr title="Dagger\Port">Port</abbr></a></em></dt>
                    <dd><p>The port number.</p></dd><dt><a href='dagger/port#method_protocol'>
<abbr title="Dagger\Port">Port</abbr>::protocol</a>() &mdash; <em>Method in class <a href='dagger/port'><abbr title="Dagger\Port">Port</abbr></a></em></dt>
                    <dd><p>The transport layer protocol.</p></dd><dt><a href='dagger/portforward'><abbr title="Dagger\PortForward">PortForward</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>Port forwarding rules for tunneling network traffic.</p></dd><dt><a href='dagger/portid'><abbr title="Dagger\PortId">PortId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>PortID</code> scalar type represents an identifier for an object of type Port.</p></dd><dt><a href='dagger/secret#method_plaintext'>
<abbr title="Dagger\Secret">Secret</abbr>::plaintext</a>() &mdash; <em>Method in class <a href='dagger/secret'><abbr title="Dagger\Secret">Secret</abbr></a></em></dt>
                    <dd><p>The value of this secret.</p></dd><dt><a href='dagger/service#method_ports'>
<abbr title="Dagger\Service">Service</abbr>::ports</a>() &mdash; <em>Method in class <a href='dagger/service'><abbr title="Dagger\Service">Service</abbr></a></em></dt>
                    <dd><p>Retrieves the list of ports provided by the service.</p></dd>        </dl><h2 id="letterQ">Q</h2>
        <dl id="indexQ"><dt><a href='dagger/client/abstractclient#method_queryLeaf'>
<abbr title="Dagger\Client\AbstractClient">AbstractClient</abbr>::queryLeaf</a>() &mdash; <em>Method in class <a href='dagger/client/abstractclient'><abbr title="Dagger\Client\AbstractClient">AbstractClient</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/client/abstractobject#method_queryLeaf'>
<abbr title="Dagger\Client\AbstractObject">AbstractObject</abbr>::queryLeaf</a>() &mdash; <em>Method in class <a href='dagger/client/abstractobject'><abbr title="Dagger\Client\AbstractObject">AbstractObject</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/client/querybuilder'><abbr title="Dagger\Client\QueryBuilder">QueryBuilder</abbr></a> &mdash; <em>Class in namespace <a href='dagger/client'>Dagger\Client</a></em></dt>
                    <dd></dd>        </dl><h2 id="letterR">R</h2>
        <dl id="indexR"><dt><a href='dagger/attribute/returnslistoftype'><abbr title="Dagger\Attribute\ReturnsListOfType">ReturnsListOfType</abbr></a> &mdash; <em>Class in namespace <a href='dagger/attribute'>Dagger\Attribute</a></em></dt>
                    <dd></dd><dt><a href='dagger/client/abstractclient#method_runQuery'>
<abbr title="Dagger\Client\AbstractClient">AbstractClient</abbr>::runQuery</a>() &mdash; <em>Method in class <a href='dagger/client/abstractclient'><abbr title="Dagger\Client\AbstractClient">AbstractClient</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/container#method_rootfs'>
<abbr title="Dagger\Container">Container</abbr>::rootfs</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container's root filesystem. Mounts are not included.</p></dd><dt><a href='dagger/enginecache#method_reservedSpace'>
<abbr title="Dagger\EngineCache">EngineCache</abbr>::reservedSpace</a>() &mdash; <em>Method in class <a href='dagger/enginecache'><abbr title="Dagger\EngineCache">EngineCache</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/functioncall#method_returnError'>
<abbr title="Dagger\FunctionCall">FunctionCall</abbr>::returnError</a>() &mdash; <em>Method in class <a href='dagger/functioncall'><abbr title="Dagger\FunctionCall">FunctionCall</abbr></a></em></dt>
                    <dd><p>Return an error from the function.</p></dd><dt><a href='dagger/functioncall#method_returnValue'>
<abbr title="Dagger\FunctionCall">FunctionCall</abbr>::returnValue</a>() &mdash; <em>Method in class <a href='dagger/functioncall'><abbr title="Dagger\FunctionCall">FunctionCall</abbr></a></em></dt>
                    <dd><p>Set the return value of the function call to the provided value.</p></dd><dt><a href='dagger/function_#method_returnType'>
<abbr title="Dagger\Function_">Function_</abbr>::returnType</a>() &mdash; <em>Method in class <a href='dagger/function_'><abbr title="Dagger\Function_">Function_</abbr></a></em></dt>
                    <dd><p>The type returned by the function.</p></dd><dt><a href='dagger/gitrepository#method_ref'>
<abbr title="Dagger\GitRepository">GitRepository</abbr>::ref</a>() &mdash; <em>Method in class <a href='dagger/gitrepository'><abbr title="Dagger\GitRepository">GitRepository</abbr></a></em></dt>
                    <dd><p>Returns details of a ref.</p></dd><dt><a href='dagger/module#method_runtime'>
<abbr title="Dagger\Module">Module</abbr>::runtime</a>() &mdash; <em>Method in class <a href='dagger/module'><abbr title="Dagger\Module">Module</abbr></a></em></dt>
                    <dd><p>The container that runs the module's entrypoint. It will fail to execute if the module doesn't compile.</p></dd><dt><a href='dagger/modulesource#method_repoRootPath'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::repoRootPath</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>The import path corresponding to the root of the git repo this source points to. Only valid for git sources.</p></dd>        </dl><h2 id="letterS">S</h2>
        <dl id="indexS"><dt><a href='dagger/client#method_secret'>
<abbr title="Dagger\Client">Client</abbr>::secret</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Creates a new secret.</p></dd><dt><a href='dagger/client#method_setSecret'>
<abbr title="Dagger\Client">Client</abbr>::setSecret</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Sets a secret given a user defined name to its plaintext and returns the secret.</p></dd><dt><a href='dagger/client#method_sourceMap'>
<abbr title="Dagger\Client">Client</abbr>::sourceMap</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Creates source map metadata.</p></dd><dt><a href='dagger/client/querybuilder#method_setArgument'>
<abbr title="Dagger\Client\QueryBuilder">QueryBuilder</abbr>::setArgument</a>() &mdash; <em>Method in class <a href='dagger/client/querybuilder'><abbr title="Dagger\Client\QueryBuilder">QueryBuilder</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/container#method_stderr'>
<abbr title="Dagger\Container">Container</abbr>::stderr</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>The error stream of the last executed command.</p></dd><dt><a href='dagger/container#method_stdout'>
<abbr title="Dagger\Container">Container</abbr>::stdout</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>The output stream of the last executed command.</p></dd><dt><a href='dagger/container#method_sync'>
<abbr title="Dagger\Container">Container</abbr>::sync</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Forces evaluation of the pipeline in the engine.</p></dd><dt><a href='dagger/currentmodule#method_source'>
<abbr title="Dagger\CurrentModule">CurrentModule</abbr>::source</a>() &mdash; <em>Method in class <a href='dagger/currentmodule'><abbr title="Dagger\CurrentModule">CurrentModule</abbr></a></em></dt>
                    <dd><p>The directory containing the module's source code loaded into the engine (plus any generated code that may have been created).</p></dd><dt><a href='dagger/directory#method_sync'>
<abbr title="Dagger\Directory">Directory</abbr>::sync</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Force evaluation in the engine.</p></dd><dt><a href='dagger/enumtypedef#method_sourceMap'>
<abbr title="Dagger\EnumTypeDef">EnumTypeDef</abbr>::sourceMap</a>() &mdash; <em>Method in class <a href='dagger/enumtypedef'><abbr title="Dagger\EnumTypeDef">EnumTypeDef</abbr></a></em></dt>
                    <dd><p>The location of this enum declaration.</p></dd><dt><a href='dagger/enumtypedef#method_sourceModuleName'>
<abbr title="Dagger\EnumTypeDef">EnumTypeDef</abbr>::sourceModuleName</a>() &mdash; <em>Method in class <a href='dagger/enumtypedef'><abbr title="Dagger\EnumTypeDef">EnumTypeDef</abbr></a></em></dt>
                    <dd><p>If this EnumTypeDef is associated with a Module, the name of the module. Unset otherwise.</p></dd><dt><a href='dagger/enumvaluetypedef#method_sourceMap'>
<abbr title="Dagger\EnumValueTypeDef">EnumValueTypeDef</abbr>::sourceMap</a>() &mdash; <em>Method in class <a href='dagger/enumvaluetypedef'><abbr title="Dagger\EnumValueTypeDef">EnumValueTypeDef</abbr></a></em></dt>
                    <dd><p>The location of this enum value declaration.</p></dd><dt><a href='dagger/fieldtypedef#method_sourceMap'>
<abbr title="Dagger\FieldTypeDef">FieldTypeDef</abbr>::sourceMap</a>() &mdash; <em>Method in class <a href='dagger/fieldtypedef'><abbr title="Dagger\FieldTypeDef">FieldTypeDef</abbr></a></em></dt>
                    <dd><p>The location of this field declaration.</p></dd><dt><a href='dagger/file#method_size'>
<abbr title="Dagger\File">File</abbr>::size</a>() &mdash; <em>Method in class <a href='dagger/file'><abbr title="Dagger\File">File</abbr></a></em></dt>
                    <dd><p>Retrieves the size of the file, in bytes.</p></dd><dt><a href='dagger/file#method_sync'>
<abbr title="Dagger\File">File</abbr>::sync</a>() &mdash; <em>Method in class <a href='dagger/file'><abbr title="Dagger\File">File</abbr></a></em></dt>
                    <dd><p>Force evaluation in the engine.</p></dd><dt><a href='dagger/functionarg#method_sourceMap'>
<abbr title="Dagger\FunctionArg">FunctionArg</abbr>::sourceMap</a>() &mdash; <em>Method in class <a href='dagger/functionarg'><abbr title="Dagger\FunctionArg">FunctionArg</abbr></a></em></dt>
                    <dd><p>The location of this arg declaration.</p></dd><dt><a href='dagger/function_#method_sourceMap'>
<abbr title="Dagger\Function_">Function_</abbr>::sourceMap</a>() &mdash; <em>Method in class <a href='dagger/function_'><abbr title="Dagger\Function_">Function_</abbr></a></em></dt>
                    <dd><p>The location of this function declaration.</p></dd><dt><a href='dagger/host#method_service'>
<abbr title="Dagger\Host">Host</abbr>::service</a>() &mdash; <em>Method in class <a href='dagger/host'><abbr title="Dagger\Host">Host</abbr></a></em></dt>
                    <dd><p>Creates a service that forwards traffic to a specified address via the host.</p></dd><dt><a href='dagger/host#method_setSecretFile'>
<abbr title="Dagger\Host">Host</abbr>::setSecretFile</a>() &mdash; <em>Method in class <a href='dagger/host'><abbr title="Dagger\Host">Host</abbr></a></em></dt>
                    <dd><p>Sets a secret given a user-defined name and the file path on the host, and returns the secret.</p></dd><dt><a href='dagger/interfacetypedef#method_sourceMap'>
<abbr title="Dagger\InterfaceTypeDef">InterfaceTypeDef</abbr>::sourceMap</a>() &mdash; <em>Method in class <a href='dagger/interfacetypedef'><abbr title="Dagger\InterfaceTypeDef">InterfaceTypeDef</abbr></a></em></dt>
                    <dd><p>The location of this interface declaration.</p></dd><dt><a href='dagger/interfacetypedef#method_sourceModuleName'>
<abbr title="Dagger\InterfaceTypeDef">InterfaceTypeDef</abbr>::sourceModuleName</a>() &mdash; <em>Method in class <a href='dagger/interfacetypedef'><abbr title="Dagger\InterfaceTypeDef">InterfaceTypeDef</abbr></a></em></dt>
                    <dd><p>If this InterfaceTypeDef is associated with a Module, the name of the module. Unset otherwise.</p></dd><dt><a href='dagger/module#method_sdk'>
<abbr title="Dagger\Module">Module</abbr>::sdk</a>() &mdash; <em>Method in class <a href='dagger/module'><abbr title="Dagger\Module">Module</abbr></a></em></dt>
                    <dd><p>The SDK config used by this module.</p></dd><dt><a href='dagger/module#method_serve'>
<abbr title="Dagger\Module">Module</abbr>::serve</a>() &mdash; <em>Method in class <a href='dagger/module'><abbr title="Dagger\Module">Module</abbr></a></em></dt>
                    <dd><p>Serve a module's API in the current session.</p></dd><dt><a href='dagger/module#method_source'>
<abbr title="Dagger\Module">Module</abbr>::source</a>() &mdash; <em>Method in class <a href='dagger/module'><abbr title="Dagger\Module">Module</abbr></a></em></dt>
                    <dd><p>The source for the module.</p></dd><dt><a href='dagger/module#method_sync'>
<abbr title="Dagger\Module">Module</abbr>::sync</a>() &mdash; <em>Method in class <a href='dagger/module'><abbr title="Dagger\Module">Module</abbr></a></em></dt>
                    <dd><p>Forces evaluation of the module, including any loading into the engine and associated validation.</p></dd><dt><a href='dagger/modulesource#method_sdk'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::sdk</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>The SDK configuration of the module.</p></dd><dt><a href='dagger/modulesource#method_sourceRootSubpath'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::sourceRootSubpath</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>The path, relative to the context directory, that contains the module's dagger.json.</p></dd><dt><a href='dagger/modulesource#method_sourceSubpath'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::sourceSubpath</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>The path to the directory containing the module's source code, relative to the context directory.</p></dd><dt><a href='dagger/modulesource#method_sync'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::sync</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>Forces evaluation of the module source, including any loading into the engine and associated validation.</p></dd><dt><a href='dagger/objecttypedef#method_sourceMap'>
<abbr title="Dagger\ObjectTypeDef">ObjectTypeDef</abbr>::sourceMap</a>() &mdash; <em>Method in class <a href='dagger/objecttypedef'><abbr title="Dagger\ObjectTypeDef">ObjectTypeDef</abbr></a></em></dt>
                    <dd><p>The location of this object declaration.</p></dd><dt><a href='dagger/objecttypedef#method_sourceModuleName'>
<abbr title="Dagger\ObjectTypeDef">ObjectTypeDef</abbr>::sourceModuleName</a>() &mdash; <em>Method in class <a href='dagger/objecttypedef'><abbr title="Dagger\ObjectTypeDef">ObjectTypeDef</abbr></a></em></dt>
                    <dd><p>If this ObjectTypeDef is associated with a Module, the name of the module. Unset otherwise.</p></dd><dt><a href='dagger/sdkconfig'><abbr title="Dagger\SDKConfig">SDKConfig</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The SDK config of the module.</p></dd><dt><a href='dagger/sdkconfig#method_source'>
<abbr title="Dagger\SDKConfig">SDKConfig</abbr>::source</a>() &mdash; <em>Method in class <a href='dagger/sdkconfig'><abbr title="Dagger\SDKConfig">SDKConfig</abbr></a></em></dt>
                    <dd><p>Source of the SDK. Either a name of a builtin SDK or a module source ref string pointing to the SDK's implementation.</p></dd><dt><a href='dagger/sdkconfigid'><abbr title="Dagger\SDKConfigId">SDKConfigId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>SDKConfigID</code> scalar type represents an identifier for an object of type SDKConfig.</p></dd><dt><a href='dagger/scalartypedef'><abbr title="Dagger\ScalarTypeDef">ScalarTypeDef</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A definition of a custom scalar defined in a Module.</p></dd><dt><a href='dagger/scalartypedef#method_sourceModuleName'>
<abbr title="Dagger\ScalarTypeDef">ScalarTypeDef</abbr>::sourceModuleName</a>() &mdash; <em>Method in class <a href='dagger/scalartypedef'><abbr title="Dagger\ScalarTypeDef">ScalarTypeDef</abbr></a></em></dt>
                    <dd><p>If this ScalarTypeDef is associated with a Module, the name of the module. Unset otherwise.</p></dd><dt><a href='dagger/scalartypedefid'><abbr title="Dagger\ScalarTypeDefId">ScalarTypeDefId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>ScalarTypeDefID</code> scalar type represents an identifier for an object of type ScalarTypeDef.</p></dd><dt><a href='dagger/secret'><abbr title="Dagger\Secret">Secret</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A reference to a secret value, which can be handled more safely than the value itself.</p></dd><dt><a href='dagger/secretid'><abbr title="Dagger\SecretId">SecretId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>SecretID</code> scalar type represents an identifier for an object of type Secret.</p></dd><dt><a href='dagger/service'><abbr title="Dagger\Service">Service</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A content-addressed service providing TCP connectivity.</p></dd><dt><a href='dagger/service#method_start'>
<abbr title="Dagger\Service">Service</abbr>::start</a>() &mdash; <em>Method in class <a href='dagger/service'><abbr title="Dagger\Service">Service</abbr></a></em></dt>
                    <dd><p>Start the service and wait for its health checks to succeed.</p></dd><dt><a href='dagger/service#method_stop'>
<abbr title="Dagger\Service">Service</abbr>::stop</a>() &mdash; <em>Method in class <a href='dagger/service'><abbr title="Dagger\Service">Service</abbr></a></em></dt>
                    <dd><p>Stop the service.</p></dd><dt><a href='dagger/serviceid'><abbr title="Dagger\ServiceId">ServiceId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>ServiceID</code> scalar type represents an identifier for an object of type Service.</p></dd><dt><a href='dagger/socket'><abbr title="Dagger\Socket">Socket</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A Unix or TCP/IP socket that can be mounted into a container.</p></dd><dt><a href='dagger/socketid'><abbr title="Dagger\SocketId">SocketId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>SocketID</code> scalar type represents an identifier for an object of type Socket.</p></dd><dt><a href='dagger/sourcemap'><abbr title="Dagger\SourceMap">SourceMap</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>Source location information.</p></dd><dt><a href='dagger/sourcemapid'><abbr title="Dagger\SourceMapId">SourceMapId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>SourceMapID</code> scalar type represents an identifier for an object of type SourceMap.</p></dd><dt><a href='dagger/terminal#method_sync'>
<abbr title="Dagger\Terminal">Terminal</abbr>::sync</a>() &mdash; <em>Method in class <a href='dagger/terminal'><abbr title="Dagger\Terminal">Terminal</abbr></a></em></dt>
                    <dd><p>Forces evaluation of the pipeline in the engine.</p></dd>        </dl><h2 id="letterT">T</h2>
        <dl id="indexT"><dt><a href='dagger/client#method_typeDef'>
<abbr title="Dagger\Client">Client</abbr>::typeDef</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Create a new TypeDef.</p></dd><dt><a href='dagger/container#method_terminal'>
<abbr title="Dagger\Container">Container</abbr>::terminal</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Opens an interactive terminal for this container using its configured default terminal command if not overridden by args (or sh as a fallback default).</p></dd><dt><a href='dagger/directory#method_terminal'>
<abbr title="Dagger\Directory">Directory</abbr>::terminal</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Opens an interactive terminal in new container with this directory mounted inside.</p></dd><dt><a href='dagger/fieldtypedef#method_typeDef'>
<abbr title="Dagger\FieldTypeDef">FieldTypeDef</abbr>::typeDef</a>() &mdash; <em>Method in class <a href='dagger/fieldtypedef'><abbr title="Dagger\FieldTypeDef">FieldTypeDef</abbr></a></em></dt>
                    <dd><p>The type of the field.</p></dd><dt><a href='dagger/functionarg#method_typeDef'>
<abbr title="Dagger\FunctionArg">FunctionArg</abbr>::typeDef</a>() &mdash; <em>Method in class <a href='dagger/functionarg'><abbr title="Dagger\FunctionArg">FunctionArg</abbr></a></em></dt>
                    <dd><p>The type of the argument.</p></dd><dt><a href='dagger/gitref#method_tree'>
<abbr title="Dagger\GitRef">GitRef</abbr>::tree</a>() &mdash; <em>Method in class <a href='dagger/gitref'><abbr title="Dagger\GitRef">GitRef</abbr></a></em></dt>
                    <dd><p>The filesystem tree at this ref.</p></dd><dt><a href='dagger/gitrepository#method_tag'>
<abbr title="Dagger\GitRepository">GitRepository</abbr>::tag</a>() &mdash; <em>Method in class <a href='dagger/gitrepository'><abbr title="Dagger\GitRepository">GitRepository</abbr></a></em></dt>
                    <dd><p>Returns details of a tag.</p></dd><dt><a href='dagger/gitrepository#method_tags'>
<abbr title="Dagger\GitRepository">GitRepository</abbr>::tags</a>() &mdash; <em>Method in class <a href='dagger/gitrepository'><abbr title="Dagger\GitRepository">GitRepository</abbr></a></em></dt>
                    <dd><p>tags that match any of the given glob patterns.</p></dd><dt><a href='dagger/host#method_tunnel'>
<abbr title="Dagger\Host">Host</abbr>::tunnel</a>() &mdash; <em>Method in class <a href='dagger/host'><abbr title="Dagger\Host">Host</abbr></a></em></dt>
                    <dd><p>Creates a tunnel that forwards traffic from the host to a service.</p></dd><dt><a href='dagger/terminal'><abbr title="Dagger\Terminal">Terminal</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>An interactive terminal that clients can connect to.</p></dd><dt><a href='dagger/terminalid'><abbr title="Dagger\TerminalId">TerminalId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>TerminalID</code> scalar type represents an identifier for an object of type Terminal.</p></dd><dt><a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>A definition of a parameter or return type in a Module.</p></dd><dt><a href='dagger/typedefid'><abbr title="Dagger\TypeDefId">TypeDefId</abbr></a> &mdash; <em>Class in namespace <a href='dagger'>Dagger</a></em></dt>
                    <dd><p>The <code>TypeDefID</code> scalar type represents an identifier for an object of type TypeDef.</p></dd>        </dl><h2 id="letterU">U</h2>
        <dl id="indexU"><dt><a href='dagger/container#method_up'>
<abbr title="Dagger\Container">Container</abbr>::up</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Starts a Service and creates a tunnel that forwards traffic from the caller's network to that service.</p></dd><dt><a href='dagger/container#method_user'>
<abbr title="Dagger\Container">Container</abbr>::user</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves the user to be set for all commands.</p></dd><dt><a href='dagger/host#method_unixSocket'>
<abbr title="Dagger\Host">Host</abbr>::unixSocket</a>() &mdash; <em>Method in class <a href='dagger/host'><abbr title="Dagger\Host">Host</abbr></a></em></dt>
                    <dd><p>Accesses a Unix socket on the host.</p></dd><dt><a href='dagger/secret#method_uri'>
<abbr title="Dagger\Secret">Secret</abbr>::uri</a>() &mdash; <em>Method in class <a href='dagger/secret'><abbr title="Dagger\Secret">Secret</abbr></a></em></dt>
                    <dd><p>The URI of this secret.</p></dd><dt><a href='dagger/service#method_up'>
<abbr title="Dagger\Service">Service</abbr>::up</a>() &mdash; <em>Method in class <a href='dagger/service'><abbr title="Dagger\Service">Service</abbr></a></em></dt>
                    <dd><p>Creates a tunnel that forwards traffic from the caller's network to this service.</p></dd>        </dl><h2 id="letterV">V</h2>
        <dl id="indexV"><dt><a href='dagger/client#method_version'>
<abbr title="Dagger\Client">Client</abbr>::version</a>() &mdash; <em>Method in class <a href='dagger/client'><abbr title="Dagger\Client">Client</abbr></a></em></dt>
                    <dd><p>Get the current Dagger Engine version.</p></dd><dt><a href='dagger/enumtypedef#method_values'>
<abbr title="Dagger\EnumTypeDef">EnumTypeDef</abbr>::values</a>() &mdash; <em>Method in class <a href='dagger/enumtypedef'><abbr title="Dagger\EnumTypeDef">EnumTypeDef</abbr></a></em></dt>
                    <dd><p>The values of the enum.</p></dd><dt><a href='dagger/envvariable#method_value'>
<abbr title="Dagger\EnvVariable">EnvVariable</abbr>::value</a>() &mdash; <em>Method in class <a href='dagger/envvariable'><abbr title="Dagger\EnvVariable">EnvVariable</abbr></a></em></dt>
                    <dd><p>The environment variable value.</p></dd><dt><a href='dagger/functioncallargvalue#method_value'>
<abbr title="Dagger\FunctionCallArgValue">FunctionCallArgValue</abbr>::value</a>() &mdash; <em>Method in class <a href='dagger/functioncallargvalue'><abbr title="Dagger\FunctionCallArgValue">FunctionCallArgValue</abbr></a></em></dt>
                    <dd><p>The value of the argument represented as a JSON serialized string.</p></dd><dt><a href='dagger/generatedcode#method_vcsGeneratedPaths'>
<abbr title="Dagger\GeneratedCode">GeneratedCode</abbr>::vcsGeneratedPaths</a>() &mdash; <em>Method in class <a href='dagger/generatedcode'><abbr title="Dagger\GeneratedCode">GeneratedCode</abbr></a></em></dt>
                    <dd><p>List of paths to mark generated in version control (i.e. .gitattributes).</p></dd><dt><a href='dagger/generatedcode#method_vcsIgnoredPaths'>
<abbr title="Dagger\GeneratedCode">GeneratedCode</abbr>::vcsIgnoredPaths</a>() &mdash; <em>Method in class <a href='dagger/generatedcode'><abbr title="Dagger\GeneratedCode">GeneratedCode</abbr></a></em></dt>
                    <dd><p>List of paths to ignore in version control (i.e. .gitignore).</p></dd><dt><a href='dagger/label#method_value'>
<abbr title="Dagger\Label">Label</abbr>::value</a>() &mdash; <em>Method in class <a href='dagger/label'><abbr title="Dagger\Label">Label</abbr></a></em></dt>
                    <dd><p>The label value.</p></dd><dt><a href='dagger/modulesource#method_version'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::version</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>The specified version of the git repo this source points to. Only valid for git sources.</p></dd>        </dl><h2 id="letterW">W</h2>
        <dl id="indexW"><dt><a href='dagger/container#method_withAnnotation'>
<abbr title="Dagger\Container">Container</abbr>::withAnnotation</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container plus the given OCI anotation.</p></dd><dt><a href='dagger/container#method_withDefaultArgs'>
<abbr title="Dagger\Container">Container</abbr>::withDefaultArgs</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Configures default arguments for future commands.</p></dd><dt><a href='dagger/container#method_withDefaultTerminalCmd'>
<abbr title="Dagger\Container">Container</abbr>::withDefaultTerminalCmd</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Set the default command to invoke for the container's terminal API.</p></dd><dt><a href='dagger/container#method_withDirectory'>
<abbr title="Dagger\Container">Container</abbr>::withDirectory</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container plus a directory written at the given path.</p></dd><dt><a href='dagger/container#method_withEntrypoint'>
<abbr title="Dagger\Container">Container</abbr>::withEntrypoint</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container but with a different command entrypoint.</p></dd><dt><a href='dagger/container#method_withEnvVariable'>
<abbr title="Dagger\Container">Container</abbr>::withEnvVariable</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container plus the given environment variable.</p></dd><dt><a href='dagger/container#method_withExec'>
<abbr title="Dagger\Container">Container</abbr>::withExec</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container after executing the specified command inside it.</p></dd><dt><a href='dagger/container#method_withExposedPort'>
<abbr title="Dagger\Container">Container</abbr>::withExposedPort</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Expose a network port.</p></dd><dt><a href='dagger/container#method_withFile'>
<abbr title="Dagger\Container">Container</abbr>::withFile</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container plus the contents of the given file copied to the given path.</p></dd><dt><a href='dagger/container#method_withFiles'>
<abbr title="Dagger\Container">Container</abbr>::withFiles</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container plus the contents of the given files copied to the given path.</p></dd><dt><a href='dagger/container#method_withLabel'>
<abbr title="Dagger\Container">Container</abbr>::withLabel</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container plus the given label.</p></dd><dt><a href='dagger/container#method_withMountedCache'>
<abbr title="Dagger\Container">Container</abbr>::withMountedCache</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container plus a cache volume mounted at the given path.</p></dd><dt><a href='dagger/container#method_withMountedDirectory'>
<abbr title="Dagger\Container">Container</abbr>::withMountedDirectory</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container plus a directory mounted at the given path.</p></dd><dt><a href='dagger/container#method_withMountedFile'>
<abbr title="Dagger\Container">Container</abbr>::withMountedFile</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container plus a file mounted at the given path.</p></dd><dt><a href='dagger/container#method_withMountedSecret'>
<abbr title="Dagger\Container">Container</abbr>::withMountedSecret</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container plus a secret mounted into a file at the given path.</p></dd><dt><a href='dagger/container#method_withMountedTemp'>
<abbr title="Dagger\Container">Container</abbr>::withMountedTemp</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container plus a temporary directory mounted at the given path. Any writes will be ephemeral to a single withExec call; they will not be persisted to subsequent withExecs.</p></dd><dt><a href='dagger/container#method_withNewFile'>
<abbr title="Dagger\Container">Container</abbr>::withNewFile</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container plus a new file written at the given path.</p></dd><dt><a href='dagger/container#method_withRegistryAuth'>
<abbr title="Dagger\Container">Container</abbr>::withRegistryAuth</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container with a registry authentication for a given address.</p></dd><dt><a href='dagger/container#method_withRootfs'>
<abbr title="Dagger\Container">Container</abbr>::withRootfs</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves the container with the given directory mounted to /.</p></dd><dt><a href='dagger/container#method_withSecretVariable'>
<abbr title="Dagger\Container">Container</abbr>::withSecretVariable</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container plus an env variable containing the given secret.</p></dd><dt><a href='dagger/container#method_withServiceBinding'>
<abbr title="Dagger\Container">Container</abbr>::withServiceBinding</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Establish a runtime dependency on a service.</p></dd><dt><a href='dagger/container#method_withUnixSocket'>
<abbr title="Dagger\Container">Container</abbr>::withUnixSocket</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container plus a socket forwarded to the given Unix socket path.</p></dd><dt><a href='dagger/container#method_withUser'>
<abbr title="Dagger\Container">Container</abbr>::withUser</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container with a different command user.</p></dd><dt><a href='dagger/container#method_withWorkdir'>
<abbr title="Dagger\Container">Container</abbr>::withWorkdir</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container with a different working directory.</p></dd><dt><a href='dagger/container#method_withoutAnnotation'>
<abbr title="Dagger\Container">Container</abbr>::withoutAnnotation</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container minus the given OCI annotation.</p></dd><dt><a href='dagger/container#method_withoutDefaultArgs'>
<abbr title="Dagger\Container">Container</abbr>::withoutDefaultArgs</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container with unset default arguments for future commands.</p></dd><dt><a href='dagger/container#method_withoutDirectory'>
<abbr title="Dagger\Container">Container</abbr>::withoutDirectory</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container with the directory at the given path removed.</p></dd><dt><a href='dagger/container#method_withoutEntrypoint'>
<abbr title="Dagger\Container">Container</abbr>::withoutEntrypoint</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container with an unset command entrypoint.</p></dd><dt><a href='dagger/container#method_withoutEnvVariable'>
<abbr title="Dagger\Container">Container</abbr>::withoutEnvVariable</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container minus the given environment variable.</p></dd><dt><a href='dagger/container#method_withoutExposedPort'>
<abbr title="Dagger\Container">Container</abbr>::withoutExposedPort</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Unexpose a previously exposed port.</p></dd><dt><a href='dagger/container#method_withoutFile'>
<abbr title="Dagger\Container">Container</abbr>::withoutFile</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container with the file at the given path removed.</p></dd><dt><a href='dagger/container#method_withoutFiles'>
<abbr title="Dagger\Container">Container</abbr>::withoutFiles</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container with the files at the given paths removed.</p></dd><dt><a href='dagger/container#method_withoutLabel'>
<abbr title="Dagger\Container">Container</abbr>::withoutLabel</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container minus the given environment label.</p></dd><dt><a href='dagger/container#method_withoutMount'>
<abbr title="Dagger\Container">Container</abbr>::withoutMount</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container after unmounting everything at the given path.</p></dd><dt><a href='dagger/container#method_withoutRegistryAuth'>
<abbr title="Dagger\Container">Container</abbr>::withoutRegistryAuth</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container without the registry authentication of a given address.</p></dd><dt><a href='dagger/container#method_withoutSecretVariable'>
<abbr title="Dagger\Container">Container</abbr>::withoutSecretVariable</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container minus the given environment variable containing the secret.</p></dd><dt><a href='dagger/container#method_withoutUnixSocket'>
<abbr title="Dagger\Container">Container</abbr>::withoutUnixSocket</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container with a previously added Unix socket removed.</p></dd><dt><a href='dagger/container#method_withoutUser'>
<abbr title="Dagger\Container">Container</abbr>::withoutUser</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container with an unset command user.</p></dd><dt><a href='dagger/container#method_withoutWorkdir'>
<abbr title="Dagger\Container">Container</abbr>::withoutWorkdir</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves this container with an unset working directory.</p></dd><dt><a href='dagger/container#method_workdir'>
<abbr title="Dagger\Container">Container</abbr>::workdir</a>() &mdash; <em>Method in class <a href='dagger/container'><abbr title="Dagger\Container">Container</abbr></a></em></dt>
                    <dd><p>Retrieves the working directory for all commands.</p></dd><dt><a href='dagger/currentmodule#method_workdir'>
<abbr title="Dagger\CurrentModule">CurrentModule</abbr>::workdir</a>() &mdash; <em>Method in class <a href='dagger/currentmodule'><abbr title="Dagger\CurrentModule">CurrentModule</abbr></a></em></dt>
                    <dd><p>Load a directory from the module's scratch working directory, including any changes that may have been made to it during module function execution.</p></dd><dt><a href='dagger/currentmodule#method_workdirFile'>
<abbr title="Dagger\CurrentModule">CurrentModule</abbr>::workdirFile</a>() &mdash; <em>Method in class <a href='dagger/currentmodule'><abbr title="Dagger\CurrentModule">CurrentModule</abbr></a></em></dt>
                    <dd><p>Load a file from the module's scratch working directory, including any changes that may have been made to it during module function execution.Load a file from the module's scratch working directory, including any changes that may have been made to it during module function execution.</p></dd><dt><a href='dagger/directory#method_withDirectory'>
<abbr title="Dagger\Directory">Directory</abbr>::withDirectory</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Retrieves this directory plus a directory written at the given path.</p></dd><dt><a href='dagger/directory#method_withFile'>
<abbr title="Dagger\Directory">Directory</abbr>::withFile</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Retrieves this directory plus the contents of the given file copied to the given path.</p></dd><dt><a href='dagger/directory#method_withFiles'>
<abbr title="Dagger\Directory">Directory</abbr>::withFiles</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Retrieves this directory plus the contents of the given files copied to the given path.</p></dd><dt><a href='dagger/directory#method_withNewDirectory'>
<abbr title="Dagger\Directory">Directory</abbr>::withNewDirectory</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Retrieves this directory plus a new directory created at the given path.</p></dd><dt><a href='dagger/directory#method_withNewFile'>
<abbr title="Dagger\Directory">Directory</abbr>::withNewFile</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Retrieves this directory plus a new file written at the given path.</p></dd><dt><a href='dagger/directory#method_withTimestamps'>
<abbr title="Dagger\Directory">Directory</abbr>::withTimestamps</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Retrieves this directory with all file/dir timestamps set to the given time.</p></dd><dt><a href='dagger/directory#method_withoutDirectory'>
<abbr title="Dagger\Directory">Directory</abbr>::withoutDirectory</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Retrieves this directory with the directory at the given path removed.</p></dd><dt><a href='dagger/directory#method_withoutFile'>
<abbr title="Dagger\Directory">Directory</abbr>::withoutFile</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Retrieves this directory with the file at the given path removed.</p></dd><dt><a href='dagger/directory#method_withoutFiles'>
<abbr title="Dagger\Directory">Directory</abbr>::withoutFiles</a>() &mdash; <em>Method in class <a href='dagger/directory'><abbr title="Dagger\Directory">Directory</abbr></a></em></dt>
                    <dd><p>Retrieves this directory with the files at the given paths removed.</p></dd><dt><a href='dagger/file#method_withName'>
<abbr title="Dagger\File">File</abbr>::withName</a>() &mdash; <em>Method in class <a href='dagger/file'><abbr title="Dagger\File">File</abbr></a></em></dt>
                    <dd><p>Retrieves this file with its name set to the given name.</p></dd><dt><a href='dagger/file#method_withTimestamps'>
<abbr title="Dagger\File">File</abbr>::withTimestamps</a>() &mdash; <em>Method in class <a href='dagger/file'><abbr title="Dagger\File">File</abbr></a></em></dt>
                    <dd><p>Retrieves this file with its created/modified timestamps set to the given time.</p></dd><dt><a href='dagger/function_#method_withArg'>
<abbr title="Dagger\Function_">Function_</abbr>::withArg</a>() &mdash; <em>Method in class <a href='dagger/function_'><abbr title="Dagger\Function_">Function_</abbr></a></em></dt>
                    <dd><p>Returns the function with the provided argument</p></dd><dt><a href='dagger/function_#method_withDescription'>
<abbr title="Dagger\Function_">Function_</abbr>::withDescription</a>() &mdash; <em>Method in class <a href='dagger/function_'><abbr title="Dagger\Function_">Function_</abbr></a></em></dt>
                    <dd><p>Returns the function with the given doc string.</p></dd><dt><a href='dagger/function_#method_withSourceMap'>
<abbr title="Dagger\Function_">Function_</abbr>::withSourceMap</a>() &mdash; <em>Method in class <a href='dagger/function_'><abbr title="Dagger\Function_">Function_</abbr></a></em></dt>
                    <dd><p>Returns the function with the given source map.</p></dd><dt><a href='dagger/generatedcode#method_withVCSGeneratedPaths'>
<abbr title="Dagger\GeneratedCode">GeneratedCode</abbr>::withVCSGeneratedPaths</a>() &mdash; <em>Method in class <a href='dagger/generatedcode'><abbr title="Dagger\GeneratedCode">GeneratedCode</abbr></a></em></dt>
                    <dd><p>Set the list of paths to mark generated in version control.</p></dd><dt><a href='dagger/generatedcode#method_withVCSIgnoredPaths'>
<abbr title="Dagger\GeneratedCode">GeneratedCode</abbr>::withVCSIgnoredPaths</a>() &mdash; <em>Method in class <a href='dagger/generatedcode'><abbr title="Dagger\GeneratedCode">GeneratedCode</abbr></a></em></dt>
                    <dd><p>Set the list of paths to ignore in version control.</p></dd><dt><a href='dagger/gitrepository#method_withAuthHeader'>
<abbr title="Dagger\GitRepository">GitRepository</abbr>::withAuthHeader</a>() &mdash; <em>Method in class <a href='dagger/gitrepository'><abbr title="Dagger\GitRepository">GitRepository</abbr></a></em></dt>
                    <dd><p>Header to authenticate the remote with.</p></dd><dt><a href='dagger/gitrepository#method_withAuthToken'>
<abbr title="Dagger\GitRepository">GitRepository</abbr>::withAuthToken</a>() &mdash; <em>Method in class <a href='dagger/gitrepository'><abbr title="Dagger\GitRepository">GitRepository</abbr></a></em></dt>
                    <dd><p>Token to authenticate the remote with.</p></dd><dt><a href='dagger/module#method_withDescription'>
<abbr title="Dagger\Module">Module</abbr>::withDescription</a>() &mdash; <em>Method in class <a href='dagger/module'><abbr title="Dagger\Module">Module</abbr></a></em></dt>
                    <dd><p>Retrieves the module with the given description</p></dd><dt><a href='dagger/module#method_withEnum'>
<abbr title="Dagger\Module">Module</abbr>::withEnum</a>() &mdash; <em>Method in class <a href='dagger/module'><abbr title="Dagger\Module">Module</abbr></a></em></dt>
                    <dd><p>This module plus the given Enum type and associated values</p></dd><dt><a href='dagger/module#method_withInterface'>
<abbr title="Dagger\Module">Module</abbr>::withInterface</a>() &mdash; <em>Method in class <a href='dagger/module'><abbr title="Dagger\Module">Module</abbr></a></em></dt>
                    <dd><p>This module plus the given Interface type and associated functions</p></dd><dt><a href='dagger/module#method_withObject'>
<abbr title="Dagger\Module">Module</abbr>::withObject</a>() &mdash; <em>Method in class <a href='dagger/module'><abbr title="Dagger\Module">Module</abbr></a></em></dt>
                    <dd><p>This module plus the given Object type and associated functions.</p></dd><dt><a href='dagger/modulesource#method_withDependencies'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::withDependencies</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>Append the provided dependencies to the module source's dependency list.</p></dd><dt><a href='dagger/modulesource#method_withEngineVersion'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::withEngineVersion</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>Upgrade the engine version of the module to the given value.</p></dd><dt><a href='dagger/modulesource#method_withIncludes'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::withIncludes</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>Update the module source with additional include patterns for files+directories from its context that are required for building it</p></dd><dt><a href='dagger/modulesource#method_withName'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::withName</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>Update the module source with a new name.</p></dd><dt><a href='dagger/modulesource#method_withSDK'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::withSDK</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>Update the module source with a new SDK.</p></dd><dt><a href='dagger/modulesource#method_withSourceSubpath'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::withSourceSubpath</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>Update the module source with a new source subpath.</p></dd><dt><a href='dagger/modulesource#method_withUpdateDependencies'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::withUpdateDependencies</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>Update one or more module dependencies.</p></dd><dt><a href='dagger/modulesource#method_withoutDependencies'>
<abbr title="Dagger\ModuleSource">ModuleSource</abbr>::withoutDependencies</a>() &mdash; <em>Method in class <a href='dagger/modulesource'><abbr title="Dagger\ModuleSource">ModuleSource</abbr></a></em></dt>
                    <dd><p>Remove the provided dependencies from the module source's dependency list.</p></dd><dt><a href='dagger/service#method_withHostname'>
<abbr title="Dagger\Service">Service</abbr>::withHostname</a>() &mdash; <em>Method in class <a href='dagger/service'><abbr title="Dagger\Service">Service</abbr></a></em></dt>
                    <dd><p>Configures a hostname which can be used by clients within the session to reach this container.</p></dd><dt><a href='dagger/typedef#method_withConstructor'>
<abbr title="Dagger\TypeDef">TypeDef</abbr>::withConstructor</a>() &mdash; <em>Method in class <a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a></em></dt>
                    <dd><p>Adds a function for constructing a new instance of an Object TypeDef, failing if the type is not an object.</p></dd><dt><a href='dagger/typedef#method_withEnum'>
<abbr title="Dagger\TypeDef">TypeDef</abbr>::withEnum</a>() &mdash; <em>Method in class <a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a></em></dt>
                    <dd><p>Returns a TypeDef of kind Enum with the provided name.</p></dd><dt><a href='dagger/typedef#method_withEnumValue'>
<abbr title="Dagger\TypeDef">TypeDef</abbr>::withEnumValue</a>() &mdash; <em>Method in class <a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a></em></dt>
                    <dd><p>Adds a static value for an Enum TypeDef, failing if the type is not an enum.</p></dd><dt><a href='dagger/typedef#method_withField'>
<abbr title="Dagger\TypeDef">TypeDef</abbr>::withField</a>() &mdash; <em>Method in class <a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a></em></dt>
                    <dd><p>Adds a static field for an Object TypeDef, failing if the type is not an object.</p></dd><dt><a href='dagger/typedef#method_withFunction'>
<abbr title="Dagger\TypeDef">TypeDef</abbr>::withFunction</a>() &mdash; <em>Method in class <a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a></em></dt>
                    <dd><p>Adds a function for an Object or Interface TypeDef, failing if the type is not one of those kinds.</p></dd><dt><a href='dagger/typedef#method_withInterface'>
<abbr title="Dagger\TypeDef">TypeDef</abbr>::withInterface</a>() &mdash; <em>Method in class <a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a></em></dt>
                    <dd><p>Returns a TypeDef of kind Interface with the provided name.</p></dd><dt><a href='dagger/typedef#method_withKind'>
<abbr title="Dagger\TypeDef">TypeDef</abbr>::withKind</a>() &mdash; <em>Method in class <a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a></em></dt>
                    <dd><p>Sets the kind of the type.</p></dd><dt><a href='dagger/typedef#method_withListOf'>
<abbr title="Dagger\TypeDef">TypeDef</abbr>::withListOf</a>() &mdash; <em>Method in class <a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a></em></dt>
                    <dd><p>Returns a TypeDef of kind List with the provided type for its elements.</p></dd><dt><a href='dagger/typedef#method_withObject'>
<abbr title="Dagger\TypeDef">TypeDef</abbr>::withObject</a>() &mdash; <em>Method in class <a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a></em></dt>
                    <dd><p>Returns a TypeDef of kind Object with the provided name.</p></dd><dt><a href='dagger/typedef#method_withOptional'>
<abbr title="Dagger\TypeDef">TypeDef</abbr>::withOptional</a>() &mdash; <em>Method in class <a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a></em></dt>
                    <dd><p>Sets whether this type can be set to null.</p></dd><dt><a href='dagger/typedef#method_withScalar'>
<abbr title="Dagger\TypeDef">TypeDef</abbr>::withScalar</a>() &mdash; <em>Method in class <a href='dagger/typedef'><abbr title="Dagger\TypeDef">TypeDef</abbr></a></em></dt>
                    <dd><p>Returns a TypeDef of kind Scalar with the provided name.</p></dd>        </dl><h2 id="letter_">_</h2>
        <dl id="index_"><dt><a href='dagger/attribute/argument#method___construct'>
<abbr title="Dagger\Attribute\Argument">Argument</abbr>::__construct</a>() &mdash; <em>Method in class <a href='dagger/attribute/argument'><abbr title="Dagger\Attribute\Argument">Argument</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/attribute/daggerfunction#method___construct'>
<abbr title="Dagger\Attribute\DaggerFunction">DaggerFunction</abbr>::__construct</a>() &mdash; <em>Method in class <a href='dagger/attribute/daggerfunction'><abbr title="Dagger\Attribute\DaggerFunction">DaggerFunction</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/attribute/defaultpath#method___construct'>
<abbr title="Dagger\Attribute\DefaultPath">DefaultPath</abbr>::__construct</a>() &mdash; <em>Method in class <a href='dagger/attribute/defaultpath'><abbr title="Dagger\Attribute\DefaultPath">DefaultPath</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/attribute/doc#method___construct'>
<abbr title="Dagger\Attribute\Doc">Doc</abbr>::__construct</a>() &mdash; <em>Method in class <a href='dagger/attribute/doc'><abbr title="Dagger\Attribute\Doc">Doc</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/attribute/ignore#method___construct'>
<abbr title="Dagger\Attribute\Ignore">Ignore</abbr>::__construct</a>() &mdash; <em>Method in class <a href='dagger/attribute/ignore'><abbr title="Dagger\Attribute\Ignore">Ignore</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/attribute/listoftype#method___construct'>
<abbr title="Dagger\Attribute\ListOfType">ListOfType</abbr>::__construct</a>() &mdash; <em>Method in class <a href='dagger/attribute/listoftype'><abbr title="Dagger\Attribute\ListOfType">ListOfType</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/attribute/returnslistoftype#method___construct'>
<abbr title="Dagger\Attribute\ReturnsListOfType">ReturnsListOfType</abbr>::__construct</a>() &mdash; <em>Method in class <a href='dagger/attribute/returnslistoftype'><abbr title="Dagger\Attribute\ReturnsListOfType">ReturnsListOfType</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/buildarg#method___construct'>
<abbr title="Dagger\BuildArg">BuildArg</abbr>::__construct</a>() &mdash; <em>Method in class <a href='dagger/buildarg'><abbr title="Dagger\BuildArg">BuildArg</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/client/abstractclient#method___construct'>
<abbr title="Dagger\Client\AbstractClient">AbstractClient</abbr>::__construct</a>() &mdash; <em>Method in class <a href='dagger/client/abstractclient'><abbr title="Dagger\Client\AbstractClient">AbstractClient</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/client/abstractinputobject#method___toString'>
<abbr title="Dagger\Client\AbstractInputObject">AbstractInputObject</abbr>::__toString</a>() &mdash; <em>Method in class <a href='dagger/client/abstractinputobject'><abbr title="Dagger\Client\AbstractInputObject">AbstractInputObject</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/client/abstractobject#method___construct'>
<abbr title="Dagger\Client\AbstractObject">AbstractObject</abbr>::__construct</a>() &mdash; <em>Method in class <a href='dagger/client/abstractobject'><abbr title="Dagger\Client\AbstractObject">AbstractObject</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/client/abstractscalar#method___construct'>
<abbr title="Dagger\Client\AbstractScalar">AbstractScalar</abbr>::__construct</a>() &mdash; <em>Method in class <a href='dagger/client/abstractscalar'><abbr title="Dagger\Client\AbstractScalar">AbstractScalar</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/client/abstractscalar#method___toString'>
<abbr title="Dagger\Client\AbstractScalar">AbstractScalar</abbr>::__toString</a>() &mdash; <em>Method in class <a href='dagger/client/abstractscalar'><abbr title="Dagger\Client\AbstractScalar">AbstractScalar</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/pipelinelabel#method___construct'>
<abbr title="Dagger\PipelineLabel">PipelineLabel</abbr>::__construct</a>() &mdash; <em>Method in class <a href='dagger/pipelinelabel'><abbr title="Dagger\PipelineLabel">PipelineLabel</abbr></a></em></dt>
                    <dd></dd><dt><a href='dagger/portforward#method___construct'>
<abbr title="Dagger\PortForward">PortForward</abbr>::__construct</a>() &mdash; <em>Method in class <a href='dagger/portforward'><abbr title="Dagger\PortForward">PortForward</abbr></a></em></dt>
                    <dd></dd>        </dl></div><div id="footer">
        Generated by <a href="https://github.com/code-lts/doctum">Doctum, a API Documentation generator and fork of Sami</a>.</div></div>
    </div>
    </body>

</html>
